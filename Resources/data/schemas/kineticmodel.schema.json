{
  "name": "kineticmodel",
  "doc": "Apache Thrift IDL definition for the phase service interface\n",
  "namespaces": {
    "*": "kineticmodel"
  },
  "includes": [
"prop",
"element",
"substance",
"kineticrate"
  ],
  "enums": [
  ],
  "typedefs": [
  ],
  "structs": [
    {
      "name": "KineticModel",
      "doc": "Description of (thermodynamic) phase\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "symbol",
          "typeId": "string",
          "doc": "unique name\/ID of this phase (e.g. \"bentpw\")\n",
          "required": "required"
        },
        {
          "key": 2,
          "name": "sourcetdb",
          "typeId": "map",
          "type": {
            "typeId": "map",
            "keyTypeId": "i32",
            "valueTypeId": "string"
          },
          "doc": "Source TDB: enum validated with class SourceTDB - do we need it or thermodataset is enough?\n",
          "required": "required"
        },
        {
          "key": 3,
          "name": "thermodataset",
          "typeId": "string",
          "doc": "Used thermodataset symbol (also phaseinvolves link)\n",
          "required": "required"
        },
        {
          "key": 4,
          "name": "name",
          "typeId": "string",
          "doc": "Extended name comment of the phase (e.g. \"aqueous electrolyte Davies model\")\n",
          "required": "req_out"
        },
        {
          "key": 5,
          "name": "aggregate_state",
          "typeId": "map",
          "type": {
            "typeId": "map",
            "keyTypeId": "i32",
            "valueTypeId": "string"
          },
          "doc": "Aggregate state of this phase: enum validated with class AggregateState\n",
          "required": "req_out"
        },
        {
          "key": 7,
          "name": "kinratemod",
          "typeId": "map",
          "type": {
            "typeId": "map",
            "keyTypeId": "i32",
            "valueTypeId": "string"
          },
          "doc": "Kinetic rate model - validate using class RateModel in kineticrate\n",
          "required": "req_out",
          "default": {
            "0": "KIN_INSTANT"
          }
        },
        {
          "key": 8,
          "name": "associatedProperties",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "prop.Item"
            }
          },
          "doc": "list of possile asociated indirect properties which are calculated using an expression\n",
          "required": "req_out"
        },
        {
          "key": 9,
          "name": "associatedPropertiesExpressions",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "string"
          },
          "doc": "expression, lua script for calculating property values (e.g. molar ratio of element in phase, mChainL, Rd); same order as in associatedProperties\n",
          "required": "req_out"
        },
        {
          "key": 10,
          "name": "SpecSurfaceArea",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Specific surface area of (carrier) phase\n",
          "required": "req_out"
        },
        {
          "key": 11,
          "name": "SpecInterfaceEnergy",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "SigmaA surface energy of solid-aqueous interface and other interfaces\n",
          "required": "req_out"
        },
        {
          "key": 13,
          "name": "SpecPoreVolume",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "new: Specific pore volume of (carrier) phase, m3\/g (default: 0)\n",
          "required": "req_out"
        },
        {
          "key": 14,
          "name": "SurfaceAreaFraction",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "new: fraction of surface area of the sorbent (ref. in lPh) occupied by this surface tile (def. 1)\n",
          "required": "req_out"
        },
        {
          "key": 15,
          "name": "PoreVolumeFraction",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "new: fraction of phase pore volume occupied by this Donnan electrolyte (default 1)\n",
          "required": "req_out"
        },
        {
          "key": 17,
          "name": "PermSurfChargeDensity",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "new: permanent surface charge density (eq\/m2), default: 0\n",
          "required": "req_out"
        },
        {
          "key": 18,
          "name": "PermVolumeChargeDensity",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "new: permanent Donnan volume charge density (eq\/m3), default: 0\n",
          "required": "req_out"
        },
        {
          "key": 19,
          "name": "IonExchangeCapacity",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "new: ion exchange capacity (eg\/g), default: 0\n",
          "required": "req_out"
        },
        {
          "key": 21,
          "name": "elements",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "element.ElementInfo"
            }
          },
          "doc": "Set of elements (IComps) represented in all components in kinmod\n",
          "required": "req_out"
        },
        {
          "key": 23,
          "name": "components",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "substance.SubstanceInfo"
            }
          },
          "doc": "Set of substances (components, end members) in kinmod\n",
          "required": "req_out"
        },
        {
          "key": 25,
          "name": "kineticrates",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "kineticrate.KineticRate"
            }
          },
          "doc": "Full Set of kinetic rate laws covered by this kinetic model\n",
          "required": "req_out"
        },
        {
          "key": 27,
          "name": "KinRateComponentProps",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "prop.Item"
            }
          },
          "doc": "optional array: properties of phase components used in the model of mixing\n",
          "required": "req_out"
        },
        {
          "key": 31,
          "name": "limitsTP",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.LimitsTP"
          },
          "doc": "Overall lower and upper T, P limits for T,P corrections\n",
          "required": "req_out",
          "default": {
            "range": 0,
            "lowerT": 273.15,
            "upperT": 298.15,
            "lowerP": 0.1,
            "upperP": 1000000
          }
        },
        {
          "key": 32,
          "name": "comment",
          "typeId": "string",
          "doc": "Comment - e.g. who entered\/modified, ...\n",
          "required": "optional"
        },
        {
          "key": 33,
          "name": "datasources",
          "typeId": "set",
          "type": {
            "typeId": "set",
            "elemTypeId": "string"
          },
          "doc": "Labels of datasource DB objects\n",
          "required": "optional"
        },
        {
          "key": 34,
          "name": "time_stamp",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.TimeStamp"
          },
          "doc": "Timestamp when the record was created or modified\n",
          "required": "optional"
        }
      ]
    },
    {
      "name": "kmpcdata",
      "doc": "Data extracted from a substance connected to the phase via components edges\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "SC",
          "typeId": "double",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "units",
          "typeId": "string",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "subsid",
          "typeId": "i32",
          "required": "optional"
        },
        {
          "key": 4,
          "name": "symbol",
          "typeId": "string",
          "required": "optional"
        },
        {
          "key": 5,
          "name": "formula",
          "typeId": "string",
          "required": "optional"
        },
        {
          "key": 6,
          "name": "subsx",
          "typeId": "i32",
          "required": "optional"
        }
      ]
    },
    {
      "name": "kmpsmdata",
      "doc": "Data extracted from a substance\/moiety connected to the phase via sitemoieties edges\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "siteid",
          "typeId": "string",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "subsid",
          "typeId": "i32",
          "required": "optional"
        },
        {
          "key": 4,
          "name": "symbol",
          "typeId": "string",
          "required": "optional"
        },
        {
          "key": 5,
          "name": "moix",
          "typeId": "i32",
          "required": "optional"
        }
      ]
    },
    {
      "name": "kmkrdata",
      "doc": "Data extracted from a kineticrate connected to kinmodel via kinmodips edges\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "krtype",
          "typeId": "string",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "interid",
          "typeId": "i32",
          "required": "optional"
        },
        {
          "key": 4,
          "name": "symbol",
          "typeId": "string",
          "required": "optional"
        },
        {
          "key": 5,
          "name": "order",
          "typeId": "i32",
          "required": "optional"
        },
        {
          "key": 6,
          "name": "Nkrc",
          "typeId": "i32",
          "required": "optional"
        },
        {
          "key": 8,
          "name": "krindx",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "i32"
          },
          "required": "optional"
        },
        {
          "key": 9,
          "name": "krpc",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "double"
          },
          "required": "optional"
        }
      ]
    }
  ],
  "constants": [
  ],
  "services": [
  ]
}
