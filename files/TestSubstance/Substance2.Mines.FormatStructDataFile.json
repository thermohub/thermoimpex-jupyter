{
     "block" :   {
          "defaults" :   {
               "properties.sourcetdb" :   "{\"18\" :   \"MINES\"}",
               "properties.TPMethods" :   "[{\"method\":{}}, {\"method\":{}}, {\"method\":{}}]"
          },
          "matches" :   {
               "key.0.fv" :   {
                    "field" :   "properties.aggregate_state",
                    "convert" :   {
                         "a" :   "{\"4\" :   \"AS_AQUEOUS\"}",
                         "g" :   "{\"0\" :   \"AS_GAS\"}",
                         "c" :   "{\"3\" :   \"AS_CRYSTAL\"}",
                         "s" :   "{\"3\" :   \"AS_CRYSTAL\"}",
                         "l" :   "{\"1\" :   \"AS_LIQUID\"}"
                    }
               },
               "dod.10.val.1" :   {
                    "field" :   "properties.Tst",
                    "script" :   "field = field+273.15"
               },
               "dod.10.val.0" :   {
                    "field" :   "properties.Pst",
                    "script" :   "field = field*1e05"
               },
               "dod.14.val" :   {
                    "field" :   "properties.name"
               },
               "dod.15.val" :   {
                    "field" :   "properties.formula"
               },
               "dod.0.val.0" :   {
                    "field" :   "properties.TPMethods.0.method",
                    "convert" :   {
                         "C" :   "{\"0\" :   \"cp_ft_equation\"}",
                         "H" :   "{\"2\" :   \"solute_hkf88_gems\"}"
                    }
               },
               "dod.0.val.1" :   {
                    "field" :   "properties.TPMethods.1.method",
                    "convert" :   {
                         "H" :   "{\"5\" :   \"landau_holland_powell98\"}",
                         "B" :   "{\"6\" :   \"landau_berman88\"}",
                         "F" :   "{\"1\" :   \"cp_ft_equation_saxena86\"}",
                         "W" :   "{\"29\" :   \"water_eos_hgk84_lvs83_gems\"}",
                         "V" :   "{\"30\" :   \"water_eos_iapws95_gems\"}"
                    }
               },
               "dod.0.val.2" :   {
                    "field" :   "properties.TPMethods.2.method",
                    "convert" :   {
                         "N" :   "{\"40\" :   \"mv_pvnrt\"}",
                         "1" :   "{\"34\" :   \"mv_constant\"}",
                         "C" :   "{\"34\" :   \"mv_constant\"}",
                         "K" :   "{\"35\" :   \"mv_equation_dorogokupets88\"}",
                         "V" :   "{\"36\" :   \"mv_equation_berman88\"}",
                         "B" :   "{\"37\" :   \"mv_eos_birch_murnaghan_gott97\"}",
                         "E" :   "{\"38\" :   \"mv_eos_murnaghan_hp98\"}",
                         "H" :   "{\"39\" :   \"mv_eos_tait_hp11\"}",
                         "G" :   "{\"8\" :    \"fug_critical_param\"}",
                         "R" :   "{\"9\" :    \"fluid_prsv\"}",
                         "S" :   "{\"10\" :   \"fluid_churakov_gottschalk\"}",
                         "T" :   "{\"11\" :   \"fluid_soave_redlich_kwong\"}",
                         "6" :   "{\"12\" :   \"fluid_sterner_pitzer\"}",
                         "7" :   "{\"13\" :   \"fluid_peng_robinson78\"}",
                         "8" :   "{\"14\" :   \"fluid_comp_redlich_kwong_hp91\"}",
                         "A" :   "{\"4\" :    \"solute_aknifiev_diamond03\"}"
                    }
               },
               "dod.18.val" :   {
                    "field" :   "properties.TPMethods.0.m_heat_capacity_ft_coeffs.values",
                    "script" :   "count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;"
               },
               "dod.19.val" :   {
                    "field" :   "properties.TPMethods.2.eos_akinfiev_diamond_coeffs.values",
                    "script" :   "count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;"
               },
               "dod.20.val" :   {
                    "field" :   "properties.TPMethods.0.eos_hkf_coeffs.values",
                    "script" :   "count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;"
               },
               "dod.21.val" :   {
                    "field" :   "properties.TPMethods.2.m_volume_fpt_coeffs.values",
                    "script" :   "count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;"
               },
               "dod.22.val" :   {
                    "field" :   "properties.TPMethods.2.eos_gas_crit_props.values",
                    "script" :   "count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;"
               },
               "dod.25.val" :   {
                    "field" :   "properties.TPMethods.1.m_landau_phase_trans_props.values",
                    "script" :   "count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;"
               },
               "dod.26.val" :   {
                    "field" :   "properties.TPMethods.2.eos_churakov_gottschalk_coeffs.values",
                    "script" :   "count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;"
               },
               "dod.11.val" :   {
                    "field" :   "properties.TPMethods.1.m_lambda_trans_props.values",
                    "script" :   "count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;"
               },
               "key.2.fv" :   {
                    "field" :   "properties.symbol"
               },
               "dod.1.val.0" :   {
                    "field" :   "properties.class_",
                    "convert" :   {
                         "d" :   "{\"101\" :   \"AS_OTHER\"}",
                         "r" :   "{\"101\" :   \"AS_OTHER\"}",
                         "n" :   "{\"101\" :   \"AS_OTHER\"}",
                         "i" :   "{\"101\" :   \"AS_OTHER\"}",
                         "f" :   "{\"101\" :   \"AS_OTHER\"}",
                         "T" :   "{\"2\" :   \"SC_AQSOLUTE\"}",
                         "E" :   "{\"101\" :   \"AS_OTHER\"}",
                         "S" :   "{\"2\" :   \"SC_AQSOLUTE\"}",
                         "K" :   "{\"4\" :   \"SC_SURFSPECIES\"}",
                         "W" :   "{\"3\" :   \"SC_AQSOLVENT\"}",
                         "L" :   "{\"101\" :   \"AS_OTHER\"}",
                         "G" :   "{\"1\" :   \"SC_GASFLUID\"}",
                         "V" :   "{\"101\" :   \"AS_OTHER\"}",
                         "C" :   "{\"101\" :   \"AS_OTHER\"}",
                         "H" :   "{\"101\" :   \"AS_OTHER\"}",
                         "N" :   "{\"101\" :   \"AS_OTHER\"}",
                         "I" :   "{\"101\" :   \"AS_OTHER\"}",
                         "J" :   "{\"101\" :   \"AS_OTHER\"}",
                         "M" :   "{\"101\" :   \"AS_OTHER\"}",
                         "F" :   "{\"101\" :   \"AS_OTHER\"}",
                         "D" :   "{\"101\" :   \"AS_OTHER\"}",
                         "Q" :   "{\"101\" :   \"AS_OTHER\"}",
                         "P" :   "{\"101\" :   \"AS_OTHER\"}",
                         "R" :   "{\"101\" :   \"AS_OTHER\"}",
                         "0" :   "{\"101\" :   \"AS_OTHER\"}",
                         "2" :   "{\"101\" :   \"AS_OTHER\"}",
                         "4" :   "{\"101\" :   \"AS_OTHER\"}",
                         "6" :   "{\"101\" :   \"AS_OTHER\"}",
                         "8" :   "{\"101\" :   \"AS_OTHER\"}",
                         "1" :   "{\"101\" :   \"AS_OTHER\"}",
                         "3" :   "{\"101\" :   \"AS_OTHER\"}",
                         "5" :   "{\"101\" :   \"AS_OTHER\"}",
                         "7" :   "{\"101\" :   \"AS_OTHER\"}",
                         "9" :   "{\"101\" :   \"AS_OTHER\"}",
                         "A" :   "{\"101\" :   \"AS_OTHER\"}",
                         "B" :   "{\"101\" :   \"AS_OTHER\"}",
                         "X" :   "{\"5\" :   \"SC_SITEMOIETY\"}",
                         "Y" :   "{\"101\" :   \"AS_OTHER\"}",
                         "Z" :   "{\"101\" :   \"AS_OTHER\"}",
                         "O" :   "{\"0\" :   \"SC_COMPONENT\"}"
                    }
               },
               "dod.3.val" :   {
                    "field" :   "properties.formula_charge"
               },
               "dod.4.val" :   {
                    "field" :   "properties.mass_per_mole"
               },
               "dod.5.val.0" :   {
                    "field" :   "properties.sm_volume.values"
               },
               "dod.6.val.0" :   {
                    "field" :   "properties.sm_gibbs_energy.values"
               },
               "dod.7.val.0" :   {
                    "field" :   "properties.sm_enthalpy.values"
               },
               "dod.8.val.0" :   {
                    "field" :   "properties.sm_entropy_abs.values"
               },
               "dod.9.val.0" :   {
                    "field" :   "properties.sm_heat_capacity_p.values"
               },
               "dod.12.val.0" :   {
                    "field" :   "properties.m_compressibility.values"
               },
               "dod.12.val.1" :   {
                    "field" :   "properties.m_expansivity.values"
               },
               "dod.13.val" :   {
                    "field" :   "properties.aq_edh_props.values",
                    "script": "count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;"
               },
               "dod.29.val" :   {
                    "field" :   "properties.comment"
               },
               "dod.28.val" :   {
                    "field" :   "properties.datasources"
               },
               "dod.17.val.0" :   {
                    "field" :   "properties.TPMethods.0.limitsTP.lowerT",
                    "script" :   "field = field+273.15"
               },
               "dod.17.val.1" :   {
                    "field" :   "properties.TPMethods.0.limitsTP.upperT",
                    "script" :   "field = field + 273.15"
               },
               "dod.6.val.1" :   {
                    "field" :   "properties.sm_gibbs_energy.errors"
               },
               "dod.5.val.1" :   {
                    "field" :   "properties.sm_volume.errors"
               },
               "dod.7.val.1" :   {
                    "field" :   "properties.sm_enthalpy.errors"
               },
               "dod.8.val.1" :   {
                    "field" :   "properties.sm_entropy_abs.errors"
               },
               "dod.9.val.1" :   {
                    "field" :   "properties.sm_heat_capacity_p.errors"
               }
          },
          "script": "if rintable.properties.formula == 'H2O@' or rintable.properties.formula == 'H2O' then if rintable.properties.class_['3'] then if rintable.properties.class_['3'] == 'SC_AQSOLVENT' then rintable.properties.TPMethods[1].method={} rintable.properties.TPMethods[1].method['29']='water_eos_hgk84_lvs83_gems' rintable.properties.TPMethods[2].method={} rintable.properties.TPMethods[2].method['26']='water_diel_jnort91_gems' end end end;
          if next(rintable.properties.TPMethods[3].method) == nil then table.remove(rintable.properties.TPMethods, 3) end;
          if next(rintable.properties.TPMethods[2].method) == nil then table.remove(rintable.properties.TPMethods, 2) end;
          if next(rintable.properties.TPMethods[1].method) == nil then table.remove(rintable.properties.TPMethods, 1) end;"
     },
     "renderer" :   "JSON",
     "label" :   "VertexSubstance",
     "comment" :   "Import"
}
