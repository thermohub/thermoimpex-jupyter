{"type":2300,"data":{"_key":"ris_mendeley","_id":"impexdefs/ris_mendeley","_rev":"_Zk7l5fm--_","name":"ris_mendeley","impexschema":"FormatKeyValueFile","schema":"VertexDataSource","comment":"import references from ris format","direction":0,"impex":"{\n     \"block\" :   {\n          \"matches\" :   {\n               \"T1\" :   {\n                    \"field\" :   \"properties.title\"\n               },\n               \"TY\" :   {\n                    \"field\" :   \"properties.bibliographic_type\",\n                    \"convert\" :   {\n                         \"JOUR\" :   \"{\\\"0\\\": \\\"ARTICLE\\\"}\",\n                         \"BOOK\" :   \"{\\\"1\\\": \\\"BOOK\\\"}\",\n                         \"CHAPTER\" :   \"{\\\"4\\\": \\\"INBOOK\\\"}\",\n                         \"CONF\" :   \"{\\\"3\\\": \\\"CONFERENCE\\\"}\",\n                         \"CHAP\" :   \"{\\\"4\\\": \\\"INBOOK\\\"}\",\n                         \"THES\" :   \"{\\\"10\\\": \\\"PHDTHESIS\\\"}\",\n                         \"RPRT\" :   \"{\\\"15\\\": \\\"PREPRINT\\\"}\",\n                         \"UNPD\" :   \"{\\\"13\\\": \\\"UNPUBLISHED\\\"}\",\n                         \"INPR\" :   \"{\\\"15\\\": \\\"PREPRINT\\\"}\",\n                         \"JFULL\" :   \"{\\\"0\\\": \\\"ARTICLE\\\"}\"\n                    }\n               },\n               \"A1\" :   {\n                    \"field\" :   \"properties.author\"\n               },\n               \"JF\" :   {\n                    \"field\" :   \"properties.journal\"\n               },\n               \"VL\" :   {\n                    \"field\" :   \"properties.volume\"\n               },\n               \"IS\" :   {\n                    \"field\" :   \"properties.number\"\n               },\n               \"Y1\" :   {\n                    \"field\" :   \"properties.year\",\n                    \"script\" :   \"field = string.gsub(field, '/*', '') field = string.sub(field,1,4)\"\n               },\n               \"SP\" :   {\n                    \"field\" :   \"properties.pages\"\n               },\n               \"N2\" :   {\n                    \"field\" :   \"properties.abstracttext\"\n               },\n               \"PB\" :   {\n                    \"field\" :   \"properties.publisher\"\n               },\n               \"AD\" :   {\n                    \"field\" :   \"properties.address\"\n               },\n               \"ET\" :   {\n                    \"field\" :   \"properties.edition\"\n               },\n               \"T2\" :   {\n                    \"field\" :   \"properties.booktitle\"\n               },\n               \"UR\" :   {\n                    \"field\" :   \"properties.links\"\n               },\n               \"EP\" :   {\n                    \"field\" :   \"properties.pages\"\n               },\n               \"ED\" :   {\n                    \"field\" :   \"properties.editor\"\n               },\n               \"ID\" :   {\n                    \"field\" :   \"properties.shortname\"\n               },\n               \"TI\" :   {\n                    \"field\" :   \"properties.title\"\n               },\n               \"BT\" :   {\n                    \"field\" :   \"properties.booktitle\"\n               },\n               \"DO\" :   {\n                    \"field\" :   \"properties.identifiers\"\n               },\n               \"KW\" :   {\n                    \"field\" :   \"properties.keywords\"\n               }\n          },\n          \"script\" :   \"function stripChars(str)\\n    local tableAccents = {}\\n    tableAccents[\\\"À\\\"] = \\\"A\\\"\\n    tableAccents[\\\"Á\\\"] = \\\"A\\\"\\n    tableAccents[\\\"Â\\\"] = \\\"A\\\"\\n    tableAccents[\\\"Ã\\\"] = \\\"A\\\"\\n    tableAccents[\\\"Ä\\\"] = \\\"A\\\"\\n    tableAccents[\\\"Å\\\"] = \\\"A\\\"\\n    tableAccents[\\\"Æ\\\"] = \\\"AE\\\"\\n    tableAccents[\\\"Ç\\\"] = \\\"C\\\"\\n    tableAccents[\\\"È\\\"] = \\\"E\\\"\\n    tableAccents[\\\"É\\\"] = \\\"E\\\"\\n    tableAccents[\\\"Ê\\\"] = \\\"E\\\"\\n    tableAccents[\\\"Ë\\\"] = \\\"E\\\"\\n    tableAccents[\\\"Ì\\\"] = \\\"I\\\"\\n    tableAccents[\\\"Í\\\"] = \\\"I\\\"\\n    tableAccents[\\\"Î\\\"] = \\\"I\\\"\\n    tableAccents[\\\"Ï\\\"] = \\\"I\\\"\\n    tableAccents[\\\"Ð\\\"] = \\\"D\\\"\\n    tableAccents[\\\"Ñ\\\"] = \\\"N\\\"\\n    tableAccents[\\\"Ò\\\"] = \\\"O\\\"\\n    tableAccents[\\\"Ó\\\"] = \\\"O\\\"\\n    tableAccents[\\\"Ô\\\"] = \\\"O\\\"\\n    tableAccents[\\\"Õ\\\"] = \\\"O\\\"\\n    tableAccents[\\\"Ö\\\"] = \\\"O\\\"\\n    tableAccents[\\\"Ø\\\"] = \\\"O\\\"\\n    tableAccents[\\\"Ù\\\"] = \\\"U\\\"\\n    tableAccents[\\\"Ú\\\"] = \\\"U\\\"\\n    tableAccents[\\\"Û\\\"] = \\\"U\\\"\\n    tableAccents[\\\"Ü\\\"] = \\\"U\\\"\\n    tableAccents[\\\"Ý\\\"] = \\\"Y\\\"\\n    tableAccents[\\\"Þ\\\"] = \\\"P\\\"\\n    tableAccents[\\\"ß\\\"] = \\\"s\\\"\\n    tableAccents[\\\"à\\\"] = \\\"a\\\"\\n    tableAccents[\\\"á\\\"] = \\\"a\\\"\\n    tableAccents[\\\"â\\\"] = \\\"a\\\"\\n    tableAccents[\\\"ã\\\"] = \\\"a\\\"\\n    tableAccents[\\\"ä\\\"] = \\\"a\\\"\\n    tableAccents[\\\"å\\\"] = \\\"a\\\"\\n    tableAccents[\\\"æ\\\"] = \\\"ae\\\"\\n    tableAccents[\\\"ç\\\"] = \\\"c\\\"\\n    tableAccents[\\\"è\\\"] = \\\"e\\\"\\n    tableAccents[\\\"é\\\"] = \\\"e\\\"\\n    tableAccents[\\\"ê\\\"] = \\\"e\\\"\\n    tableAccents[\\\"ë\\\"] = \\\"e\\\"\\n    tableAccents[\\\"ì\\\"] = \\\"i\\\"\\n    tableAccents[\\\"í\\\"] = \\\"i\\\"\\n    tableAccents[\\\"î\\\"] = \\\"i\\\"\\n    tableAccents[\\\"ï\\\"] = \\\"i\\\"\\n    tableAccents[\\\"ð\\\"] = \\\"eth\\\"\\n    tableAccents[\\\"ñ\\\"] = \\\"n\\\"\\n    tableAccents[\\\"ò\\\"] = \\\"o\\\"\\n    tableAccents[\\\"ó\\\"] = \\\"o\\\"\\n    tableAccents[\\\"ô\\\"] = \\\"o\\\"\\n    tableAccents[\\\"õ\\\"] = \\\"o\\\"\\n    tableAccents[\\\"ö\\\"] = \\\"o\\\"\\n    tableAccents[\\\"ø\\\"] = \\\"o\\\"\\n    tableAccents[\\\"ù\\\"] = \\\"u\\\"\\n    tableAccents[\\\"ú\\\"] = \\\"u\\\"\\n    tableAccents[\\\"û\\\"] = \\\"u\\\"\\n    tableAccents[\\\"ü\\\"] = \\\"u\\\"\\n    tableAccents[\\\"ý\\\"] = \\\"y\\\"\\n    tableAccents[\\\"þ\\\"] = \\\"p\\\"\\n    tableAccents[\\\"ÿ\\\"] = \\\"y\\\"\\n\\n    local normalisedString = \\\"\\\"\\n\\n    local normalisedString = str:gsub(\\\"[%z\\\\1-\\\\127\\\\194-\\\\244][\\\\128-\\\\191]*\\\", tableAccents)\\n\\n    return normalisedString\\nend\\n\\nif rintable.properties.shortname == \\\"\\\" or rintable.properties.shortname == nil then\\n    rintable.properties.shortname = rintable.properties.author[1]\\nend\\nif rintable.properties.bibliographic_type ~= '{\\\"1\\\": \\\"BOOK\\\"}' then\\n    rintable.properties.booktitle = \\\"\\\"\\nend\\nif rintable.properties.bibliographic_type == '{\\\"1\\\": \\\"BOOK\\\"}' then\\n    rintable.properties.booktitle = rintable.properties.title\\nend\\nsize = 0\\nfor k, v in pairs(rintable.properties.author) do\\n    size = size + 1\\nend\\nyear = rintable.properties.year\\nif size == 1 then\\n    first = rintable.properties.author[1]:gsub(\\\"[%p%c%s]\\\", \\\"\\\")\\n    first = stripChars(first)\\n    shrtn = \\\"[\\\" .. year .. string.upper(string.sub(first, 1, 3)) .. \\\"]\\\"\\n    rintable.properties.shortname = shrtn\\nend\\nif size > 1 then\\n    first = rintable.properties.author[1]:gsub(\\\"[%p%c%s]\\\", \\\"\\\")\\n    first = stripChars(first)\\n    second = rintable.properties.author[2]:gsub(\\\"[%p%c%s]\\\", \\\"\\\")\\n    second = stripChars(second)\\n    shrtn = \\\"[\\\" .. year .. string.upper(string.sub(first, 1, 3)) .. \\\"/\\\" .. string.upper(string.sub(second, 1, 3)) .. \\\"]\\\"\\n    rintable.properties.shortname = shrtn\\nend\\n\"\n     },\n     \"format\" :   {\n          \"head_regexp\" :   \"\",\n          \"end_regexp\" :   \"^\\\\s*ER\\\\s*-\\\\s*\",\n          \"key_regexp\" :   \"^\\\\s*([A-Z0-9]{2})\\\\s*-\\\\s*\",\n          \"value_regexp\" :   \"\",\n          \"value_next\" :   \"\",\n          \"Ndata\" :   0\n     },\n     \"renderer\" :   \"RIS\",\n     \"label\" :   \"VertexDataSource\",\n     \"comment\" :   \"test\"\n}"}}
{"type":2300,"data":{"_key":"aq17","_id":"impexdefs/aq17","_rev":"_Zk74eyG---","name":"aq17","impexschema":"FormatStructDataFile","schema":"VertexElement","comment":"import elements from GEMS4 json format ","direction":0,"impex":"{\n     \"block\" :   {\n          \"defaults\" :   {\n               \"properties.radioactivity.decay_type\" :   \"{\\\"0\\\" :   \\\"STABLE\\\"}\",\n               \"properties.radioactivity.half_life_lambda.values\" :   \"[ 0 ]\",\n               \"properties.datasources\" :   \"[\\\"AQ17\\\"]\",\n               \"properties.sourcetdb\" :   \"{\\\"19\\\" :   \\\"AQ17\\\"}\"\n          },\n          \"matches\" :   {\n               \"key.0.fv\" :   {\n                    \"field\" :   \"properties.symbol\"\n               },\n               \"key.1.fv\" :   {\n                    \"field\" :   \"properties.class_\",\n                    \"convert\" :   {\n                         \"e\" :   \"{\\\"0\\\" :   \\\"ELEMENT\\\"}\",\n                         \"o\" :   \"{\\\"0\\\" :   \\\"ELEMENT\\\"}\",\n                         \"h\" :   \"{\\\"0\\\" :   \\\"ELEMENT\\\"}\",\n                         \"z\" :   \"{\\\"4\\\" :   \\\"CHARGE\\\"}\",\n                         \"a\" :   \"{\\\"2\\\" :   \\\"LIGAND\\\"}\",\n                         \"v\" :   \"{\\\"5\\\" :   \\\"OTHER_EC\\\"}\"\n                    }\n               },\n               \"key.2.fv\" :   {\n                    \"field\" :   \"properties.name\"\n               },\n               \"dod.0.label\" :   {\n                    \"field\" :   \"properties.atomic_mass.name\"\n               },\n               \"dod.0.val\" :   {\n                    \"field\" :   \"properties.atomic_mass.values\"\n               },\n               \"dod.1.label\" :   {\n                    \"field\" :   \"properties.entropy.name\"\n               },\n               \"dod.1.val\" :   {\n                    \"field\" :   \"properties.entropy.values\"\n               },\n               \"dod.2.label\" :   {\n                    \"field\" :   \"properties.heat_capacity.name\"\n               },\n               \"dod.2.val\" :   {\n                    \"field\" :   \"properties.heat_capacity.values\"\n               },\n               \"dod.3.label\" :   {\n                    \"field\" :   \"properties.volume.name\"\n               },\n               \"dod.3.val\" :   {\n                    \"field\" :   \"properties.volume.values\"\n               },\n               \"dod.5.label\" :   {\n                    \"field\" :   \"properties.isotope_abundance.name\"\n               },\n               \"dod.5.val\" :   {\n                    \"field\" :   \"properties.isotope_abundance.values\"\n               },\n               \"dod.properties.val\" :   {\n                    \"field\" :   \"properties.valences\"\n               },\n               \"dod.7.val\" :   {\n                    \"field\" :   \"properties.number\"\n               },\n               \"dod.9.val\" :   {\n                    \"field\" :   \"properties.aggregate_state\",\n                    \"convert\" :   {\n                         \"g   \" :   \"{\\\"0\\\" :   \\\"AS_GAS\\\"}\",\n                         \"s   \" :   \"{\\\"3\\\" :   \\\"AS_CRYSTAL\\\"}\",\n                         \"l   \" :   \"{\\\"1\\\" :   \\\"AS_LIQUID\\\"}\",\n                         \"`   \" :   \"{\\\"6\\\" :   \\\"AS_IONEX\\\"}\"\n                    }\n               },\n               \"dod.10.val\" :   {\n                    \"field\" :   \"properties.comment\"\n               },\n               \"dod.11.val\" :   {\n                    \"field\" :   \"properties.formula\"\n               },\n               \"dod.12.val\" :   {\n                    \"field\" :   \"properties.substance\"\n               }\n          }\n     },\n     \"renderer\" :   \"JSON\",\n     \"label\" :   \"VertexElement\",\n     \"comment\" :   \"Import\"\n}"}}
{"type":2300,"data":{"_key":"aq17_0","_id":"impexdefs/aq17_0","_rev":"_Zk76Kqy---","name":"aq17","impexschema":"FormatStructDataFile","schema":"VertexSubstance","comment":"import from GEMS4 json format","direction":0,"impex":"{\n     \"block\" :   {\n          \"defaults\" :   {\n               \"properties.sourcetdb\" :   \"{\\\"19\\\" :   \\\"AQ17\\\"}\",\n               \"properties.TPMethods\" :   \"[{\\\"method\\\":{}}, {\\\"method\\\":{}}, {\\\"method\\\":{}}]\",\n               \"properties.temp_import\" :   \"[{}, {}]\"\n          },\n          \"matches\" :   {\n               \"key.0.fv\" :   {\n                    \"field\" :   \"properties.aggregate_state\",\n                    \"convert\" :   {\n                         \"a\" :   \"{\\\"4\\\" :   \\\"AS_AQUEOUS\\\"}\",\n                         \"g\" :   \"{\\\"0\\\" :   \\\"AS_GAS\\\"}\",\n                         \"c\" :   \"{\\\"3\\\" :   \\\"AS_CRYSTAL\\\"}\",\n                         \"s\" :   \"{\\\"3\\\" :   \\\"AS_CRYSTAL\\\"}\",\n                         \"l\" :   \"{\\\"1\\\" :   \\\"AS_LIQUID\\\"}\",\n                         \"f\" :   \"{\\\"0\\\" :   \\\"AS_GAS\\\"}\",\n                         \"p\" :   \"{\\\"8\\\" :   \\\"AS_PLASMA\\\"}\"\n                    }\n               },\n               \"dod.10.val.1\" :   {\n                    \"field\" :   \"properties.Tst\",\n                    \"script\" :   \"field = field+273.15\"\n               },\n               \"dod.10.val.0\" :   {\n                    \"field\" :   \"properties.Pst\",\n                    \"script\" :   \"field = field*1e05\"\n               },\n               \"dod.14.val\" :   {\n                    \"field\" :   \"properties.name\"\n               },\n               \"dod.15.val\" :   {\n                    \"field\" :   \"properties.formula\"\n               },\n               \"dod.0.val.0\" :   {\n                    \"field\" :   \"properties.TPMethods.0.method\",\n                    \"convert\" :   {\n                         \"C\" :   \"{\\\"0\\\" :   \\\"cp_ft_equation\\\"}\",\n                         \"H\" :   \"{\\\"3\\\" :   \\\"solute_hkf88_reaktoro\\\"}\"\n                    }\n               },\n               \"dod.0.val.1\" :   {\n                    \"field\" :   \"properties.TPMethods.1.method\",\n                    \"convert\" :   {\n                         \"H\" :   \"{\\\"5\\\" :   \\\"landau_holland_powell98\\\"}\",\n                         \"B\" :   \"{\\\"6\\\" :   \\\"landau_berman88\\\"}\",\n                         \"F\" :   \"{\\\"1\\\" :   \\\"cp_ft_equation_saxena86\\\"}\",\n                         \"W\" :   \"{\\\"31\\\" :  \\\"water_eos_hgk84_reaktoro\\\"}\",\n                         \"V\" :   \"{\\\"32\\\" :  \\\"water_eos_iapws95_reaktoro\\\"}\",\n                         \"S\" :   \"{\\\"43\\\" :  \\\"standard_entropy_cp_integration\\\"}\"\n                    }\n               },\n               \"dod.0.val.2\" :   {\n                    \"field\" :   \"properties.TPMethods.2.method\",\n                    \"convert\" :   {\n                         \"N\" :   \"{\\\"40\\\" :   \\\"mv_pvnrt\\\"}\",\n                         \"1\" :   \"{\\\"34\\\" :   \\\"mv_constant\\\"}\",\n                         \"C\" :   \"{\\\"34\\\" :   \\\"mv_constant\\\"}\",\n                         \"K\" :   \"{\\\"35\\\" :   \\\"mv_equation_dorogokupets88\\\"}\",\n                         \"V\" :   \"{\\\"36\\\" :   \\\"mv_equation_berman88\\\"}\",\n                         \"B\" :   \"{\\\"37\\\" :   \\\"mv_eos_birch_murnaghan_gott97\\\"}\",\n                         \"E\" :   \"{\\\"38\\\" :   \\\"mv_eos_murnaghan_hp98\\\"}\",\n                         \"H\" :   \"{\\\"39\\\" :   \\\"mv_eos_tait_hp11\\\"}\",\n                         \"G\" :   \"{\\\"8\\\" :    \\\"fug_critical_param\\\"}\",\n                         \"R\" :   \"{\\\"9\\\" :    \\\"fluid_prsv\\\"}\",\n                         \"S\" :   \"{\\\"10\\\" :   \\\"fluid_churakov_gottschalk\\\"}\",\n                         \"T\" :   \"{\\\"11\\\" :   \\\"fluid_soave_redlich_kwong\\\"}\",\n                         \"6\" :   \"{\\\"12\\\" :   \\\"fluid_sterner_pitzer\\\"}\",\n                         \"7\" :   \"{\\\"13\\\" :   \\\"fluid_peng_robinson78\\\"}\",\n                         \"8\" :   \"{\\\"14\\\" :   \\\"fluid_comp_redlich_kwong_hp91\\\"}\",\n                         \"A\" :   \"{\\\"4\\\" :    \\\"solute_aknifiev_diamond03\\\"}\"\n                    }\n               },\n               \"dod.18.val\" :   {\n                    \"field\" :   \"properties.TPMethods.0.m_heat_capacity_ft_coeffs.values\",\n                    \"script\" :   \"count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;\"\n               },\n               \"dod.19.val\" :   {\n                    \"field\" :   \"properties.TPMethods.2.eos_akinfiev_diamond_coeffs.values\",\n                    \"script\" :   \"count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;\"\n               },\n               \"dod.20.val\" :   {\n                    \"field\" :   \"properties.TPMethods.0.eos_hkf_coeffs.values\",\n                    \"script\" :   \"count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;\"\n               },\n               \"dod.21.val\" :   {\n                    \"field\" :   \"properties.TPMethods.2.m_volume_fpt_coeffs.values\",\n                    \"script\" :   \"count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;\"\n               },\n               \"dod.22.val\" :   {\n                    \"field\" :   \"properties.TPMethods.2.eos_gas_crit_props.values\",\n                    \"script\" :   \"count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;\"\n               },\n               \"dod.25.val\" :   {\n                    \"field\" :   \"properties.TPMethods.1.m_landau_phase_trans_props.values\",\n                    \"script\" :   \"count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;\"\n               },\n               \"dod.26.val\" :   {\n                    \"field\" :   \"properties.TPMethods.2.eos_churakov_gottschalk_coeffs.values\",\n                    \"script\" :   \"count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;\"\n               },\n               \"dod.11.val\" :   {\n                    \"field\" :   \"properties.TPMethods.1.m_lambda_trans_props.values\",\n                    \"script\" :   \"count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;\"\n               },\n               \"key.2.fv\" :   {\n                    \"field\" :   \"properties.symbol\"\n               },\n               \"dod.1.val.0\" :   {\n                    \"field\" :   \"properties.class_\",\n                    \"convert\" :   {\n                         \"d\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"r\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"n\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"i\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"f\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"T\" :   \"{\\\"2\\\" :   \\\"SC_AQSOLUTE\\\"}\",\n                         \"E\" :   \"{\\\"2\\\" :   \\\"SC_AQSOLUTE\\\"}\",\n                         \"S\" :   \"{\\\"2\\\" :   \\\"SC_AQSOLUTE\\\"}\",\n                         \"K\" :   \"{\\\"4\\\" :   \\\"SC_SURFSPECIES\\\"}\",\n                         \"W\" :   \"{\\\"3\\\" :   \\\"SC_AQSOLVENT\\\"}\",\n                         \"L\" :   \"{\\\"3\\\" :   \\\"SC_AQSOLVENT\\\"}\",\n                         \"G\" :   \"{\\\"1\\\" :   \\\"SC_GASFLUID\\\"}\",\n                         \"V\" :   \"{\\\"1\\\" :   \\\"SC_GASFLUID\\\"}\",\n                         \"C\" :   \"{\\\"1\\\" :   \\\"SC_GASFLUID\\\"}\",\n                         \"H\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"N\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"I\" :   \"{\\\"0\\\" :   \\\"SC_COMPONENT\\\"}\",\n                         \"J\" :   \"{\\\"0\\\" :   \\\"SC_COMPONENT\\\"}\",\n                         \"M\" :   \"{\\\"0\\\" :   \\\"SC_COMPONENT\\\"}\",\n                         \"F\" :   \"{\\\"0\\\" :   \\\"SC_COMPONENT\\\"}\",\n                         \"D\" :   \"{\\\"0\\\" :   \\\"SC_COMPONENT\\\"}\",\n                         \"Q\" :   \"{\\\"0\\\" :   \\\"SC_COMPONENT\\\"}\",\n                         \"P\" :   \"{\\\"0\\\" :   \\\"SC_COMPONENT\\\"}\",\n                         \"R\" :   \"{\\\"0\\\" :   \\\"SC_COMPONENT\\\"}\",\n                         \"0\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"2\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"4\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"6\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"8\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"1\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"3\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"5\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"7\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"9\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"A\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"B\" :   \"{\\\"101\\\" :   \\\"AS_OTHER\\\"}\",\n                         \"X\" :   \"{\\\"4\\\" :   \\\"SC_SURFSPECIES\\\"}\",\n                         \"Y\" :   \"{\\\"4\\\" :   \\\"SC_SURFSPECIES\\\"}\",\n                         \"Z\" :   \"{\\\"4\\\" :   \\\"SC_SURFSPECIES\\\"}\",\n                         \"O\" :   \"{\\\"0\\\" :   \\\"SC_COMPONENT\\\"}\"\n                    }\n               },\n               \"dod.3.val\" :   {\n                    \"field\" :   \"properties.formula_charge\"\n               },\n               \"dod.4.val\" :   {\n                    \"field\" :   \"properties.mass_per_mole\"\n               },\n               \"dod.5.val.0\" :   {\n                    \"field\" :   \"properties.sm_volume.values\"\n               },\n               \"dod.6.val.0\" :   {\n                    \"field\" :   \"properties.sm_gibbs_energy.values\"\n               },\n               \"dod.7.val.0\" :   {\n                    \"field\" :   \"properties.sm_enthalpy.values\"\n               },\n               \"dod.8.val.0\" :   {\n                    \"field\" :   \"properties.sm_entropy_abs.values\"\n               },\n               \"dod.9.val.0\" :   {\n                    \"field\" :   \"properties.sm_heat_capacity_p.values\"\n               },\n               \"dod.12.val.0\" :   {\n                    \"field\" :   \"properties.m_compressibility.values\"\n               },\n               \"dod.12.val.1\" :   {\n                    \"field\" :   \"properties.m_expansivity.values\"\n               },\n               \"dod.13.val\" :   {\n                    \"field\" :   \"properties.aq_edh_props.values\",\n                    \"script\" :   \"count=0 count2=0 for k,v in pairs(field) do if v==0 then count = count + 1 end end for k,v in pairs(field) do count2 = count2 + 1 end if count==count2 then field = nil end;\"\n               },\n               \"dod.29.val\" :   {\n                    \"field\" :   \"properties.comment\"\n               },\n               \"dod.28.val\" :   {\n                    \"field\" :   \"properties.datasources\"\n               },\n               \"dod.17.val.0\" :   {\n                    \"field\" :   \"properties.TPMethods.0.limitsTP.lowerT\",\n                    \"script\" :   \"field = field+273.15\"\n               },\n               \"dod.17.val.1\" :   {\n                    \"field\" :   \"properties.TPMethods.0.limitsTP.upperT\",\n                    \"script\" :   \"field = field + 273.15\"\n               },\n               \"dod.17.val\" :   {\n                    \"field\" :   \"properties.temp_import.0.values\",\n                    \"script\" :   \"for k,v in pairs(field) do field[k]=field[k]+273.15 end\"\n               },\n               \"dod.24.val\" :   {\n                    \"field\" :   \"properties.temp_import.1.values\"\n               },\n               \"dod.6.val.1\" :   {\n                    \"field\" :   \"properties.sm_gibbs_energy.errors\"\n               },\n               \"dod.5.val.1\" :   {\n                    \"field\" :   \"properties.sm_volume.errors\"\n               },\n               \"dod.7.val.1\" :   {\n                    \"field\" :   \"properties.sm_enthalpy.errors\"\n               },\n               \"dod.8.val.1\" :   {\n                    \"field\" :   \"properties.sm_entropy_abs.errors\"\n               },\n               \"dod.9.val.1\" :   {\n                    \"field\" :   \"properties.sm_heat_capacity_p.errors\"\n               }\n          },\n          \"script\" :   \"print(rintable.properties.symbol)\\nif rintable.properties.formula == \\\"H+\\\" then\\n    rintable.properties.TPMethods = nil\\n    rintable.properties.temp_import = nil\\nelse\\n    if rintable.properties.formula == \\\"H2O@\\\" or rintable.properties.formula == \\\"H2O\\\" then\\n        if rintable.properties.class_[\\\"3\\\"] then\\n            if rintable.properties.class_[\\\"3\\\"] == \\\"SC_AQSOLVENT\\\" then\\n                rintable.properties.TPMethods[1].method = {}\\n                rintable.properties.TPMethods[1].method[\\\"31\\\"] = \\\"water_eos_hgk84_reaktoro\\\"\\n                rintable.properties.TPMethods[2].method = {}\\n                rintable.properties.TPMethods[2].method[\\\"25\\\"] = \\\"water_diel_jnort91_reaktoro\\\"\\n            end\\n        end\\n    end\\n    if next(rintable.properties.TPMethods[3].method) == nil then\\n        table.remove(rintable.properties.TPMethods, 3)\\n    end\\n    if next(rintable.properties.TPMethods[2].method) == nil then\\n        table.remove(rintable.properties.TPMethods, 2)\\n    end\\n    if next(rintable.properties.TPMethods[1].method) == nil then\\n        table.remove(rintable.properties.TPMethods, 1)\\n    end\\n    if rintable.properties.temp_import[1].values ~= nil then\\n        t = rintable.properties.temp_import[1].values\\n        n = 0\\n        for k, v in pairs(t) do\\n            n = n + 1\\n        end\\n        if n > 2 then\\n            n = n / 2\\n            param = rintable.properties.TPMethods[1].m_heat_capacity_ft_coeffs.values\\n            ft = rintable.properties.temp_import[2].values\\n            for j = 1, n do\\n                size = 0\\n                for k, v in pairs(rintable.properties.TPMethods) do\\n                    size = size + 1\\n                end\\n                for i = size, j do\\n                    rintable.properties.TPMethods[i + 1] = rintable.properties.TPMethods[i]\\n                end\\n                rintable.properties.TPMethods[j] = {}\\n                rintable.properties.TPMethods[j].method = {}\\n                rintable.properties.TPMethods[j].method[\\\"0\\\"] = \\\"cp_ft_equation\\\"\\n                rintable.properties.TPMethods[j].limitsTP = {}\\n                rintable.properties.TPMethods[j].limitsTP.range = true\\n                rintable.properties.TPMethods[j].limitsTP.lowerT = t[j + ((n) * 0)]\\n                rintable.properties.TPMethods[j].limitsTP.upperT = t[j + ((n) * 1)]\\n                if ft ~= nil then\\n                    if (j < n) then\\n                        m_phase_trans_props = {}\\n                        for p = 0, 4 do\\n                            m_phase_trans_props[p + 1] = ft[j + ((n - 1) * p)]\\n                            if (p == 0) then\\n                                m_phase_trans_props[p + 1] = m_phase_trans_props[p + 1] + 273.15\\n                            end\\n                        end\\n                        rintable.properties.TPMethods[j].m_phase_trans_props = {}\\n                        rintable.properties.TPMethods[j].m_phase_trans_props.values = m_phase_trans_props\\n                        rintable.properties.TPMethods[j].m_phase_trans_props.names = {\\n                            \\\"Temperature\\\",\\n                            \\\"dS\\\",\\n                            \\\"dH\\\",\\n                            \\\"dV\\\",\\n                            \\\"dT/dP\\\"\\n                        }\\n                        rintable.properties.TPMethods[j].m_phase_trans_props.units = {\\n                            \\\"K\\\",\\n                            \\\"J/(mol*K)\\\",\\n                            \\\"J/mol\\\",\\n                            \\\"J/bar\\\",\\n                            \\\"K/bar\\\"\\n                        }\\n                    --[[ for k,v in pairs(m_phase_trans_props) do print(v) end ]]\\n                    end\\n                end\\n                cp_coeffs = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\n                for p = 0, 10 do\\n                    cp_coeffs[p + 1] = param[j + ((n) * p)]\\n                end\\n                rintable.properties.TPMethods[j].m_heat_capacity_ft_coeffs = {}\\n                rintable.properties.TPMethods[j].m_heat_capacity_ft_coeffs.values = cp_coeffs\\n                rintable.properties.TPMethods[j].m_heat_capacity_ft_coeffs.names = {\\n                    \\\"a0\\\",\\n                    \\\"a1\\\",\\n                    \\\"a2\\\",\\n                    \\\"a3\\\",\\n                    \\\"a4\\\",\\n                    \\\"a5\\\",\\n                    \\\"a6\\\",\\n                    \\\"a7\\\",\\n                    \\\"a8\\\",\\n                    \\\"a9\\\",\\n                    \\\"a10\\\"\\n                }\\n                rintable.properties.TPMethods[j].m_heat_capacity_ft_coeffs.units = {\\n                    \\\"J/(mol*K)\\\",\\n                    \\\"J/(mol*K^2)\\\",\\n                    \\\"(J*K)/mol\\\",\\n                    \\\"J/(mol*K^0.5)\\\",\\n                    \\\"J/(mol*K^3)\\\",\\n                    \\\"J/(mol*K^4)\\\",\\n                    \\\"J/(mol*K^5)\\\",\\n                    \\\"(J*K^2)/mol\\\",\\n                    \\\"J/mol\\\",\\n                    \\\"J/(mol*K^1.5)\\\",\\n                    \\\"J/(mol*K)\\\"\\n                }\\n                --[[ for k,v in pairs(cp_coeffs) do print(v) end ]]\\n            end\\n        end\\n    end\\n\\n    if rintable.properties.aq_edh_props ~= nil then\\n        rintable.properties.aq_edh_props.names = {\\\"a0\\\", \\\"b\\\"}\\n        rintable.properties.aq_edh_props.units = {\\\"Å\\\"}\\n    end\\n    if rintable.properties.sm_volume ~= nil then\\n        rintable.properties.sm_volume.units = {\\\"J/bar\\\"}\\n    end\\n    if rintable.properties.sm_gibbs_energy ~= nil then\\n        rintable.properties.sm_gibbs_energy.units = {\\\"J/mol\\\"}\\n    end\\n    if rintable.properties.sm_enthalpy ~= nil then\\n        rintable.properties.sm_enthalpy.units = {\\\"J/mol\\\"}\\n    end\\n    if rintable.properties.sm_entropy_abs ~= nil then\\n        rintable.properties.sm_entropy_abs.units = {\\\"J/(mol*K)\\\"}\\n    end\\n    if rintable.properties.sm_heat_capacity_p ~= nil then\\n        rintable.properties.sm_heat_capacity_p.units = {\\\"J/(mol*K)\\\"}\\n    end\\n    if rintable.properties.m_compressibility ~= nil then\\n        rintable.properties.m_compressibility.units = {\\\"1e-05/K\\\"}\\n    end\\n    if rintable.properties.m_expansivity ~= nil then\\n        rintable.properties.m_expansivity.units = {\\\"kbar\\\"}\\n    end\\n    --rintable.properties.temp_import = nil\\n\\n    if rintable.properties.TPMethods[1].method[\\\"3\\\"] == \\\"solute_hkf88_reaktoro\\\" then\\n        if rintable.properties.TPMethods[1].eos_hkf_coeffs ~= nil then\\n            rintable.properties.TPMethods[1].eos_hkf_coeffs.names = {\\\"a1\\\", \\\"a2\\\", \\\"a3\\\", \\\"a4\\\", \\\"c1\\\", \\\"c2\\\", \\\"wref\\\"}\\n            rintable.properties.TPMethods[1].eos_hkf_coeffs.units = {\\n                \\\"cal/(mol*bar)\\\",\\n                \\\"cal/mol\\\",\\n                \\\"(cal*K)/mol\\\",\\n                \\\"cal/(mol*K)\\\",\\n                \\\"(cal*K)/mol\\\",\\n                \\\"cal/mol\\\"\\n            }\\n        else\\n            table.remove(rintable.properties.TPMethods, 1)\\n        end\\n    end\\n    if rintable.properties.TPMethods[1].method[\\\"0\\\"] == \\\"cp_ft_equation\\\" then\\n        if rintable.properties.TPMethods[1].m_heat_capacity_ft_coeffs ~= nil then\\n            t = rintable.properties.temp_import[1].values\\n            rintable.properties.TPMethods[1].limitsTP = {}\\n            rintable.properties.TPMethods[1].limitsTP.range = true\\n            rintable.properties.TPMethods[1].limitsTP.lowerT = t[1]\\n            rintable.properties.TPMethods[1].limitsTP.upperT = t[2]\\n            rintable.properties.TPMethods[1].m_heat_capacity_ft_coeffs.names = {\\n                \\\"a0\\\",\\n                \\\"a1\\\",\\n                \\\"a2\\\",\\n                \\\"a3\\\",\\n                \\\"a4\\\",\\n                \\\"a5\\\",\\n                \\\"a6\\\",\\n                \\\"a7\\\",\\n                \\\"a8\\\",\\n                \\\"a9\\\",\\n                \\\"a10\\\"\\n            }\\n            rintable.properties.TPMethods[1].m_heat_capacity_ft_coeffs.units = {\\n                \\\"J/(mol*K)\\\",\\n                \\\"J/(mol*K^2)\\\",\\n                \\\"(J*K)/mol\\\",\\n                \\\"J/(mol*K^0.5)\\\",\\n                \\\"J/(mol*K^3)\\\",\\n                \\\"J/(mol*K^4)\\\",\\n                \\\"J/(mol*K^5)\\\",\\n                \\\"(J*K^2)/mol\\\",\\n                \\\"J/mol\\\",\\n                \\\"J/(mol*K^1.5)\\\",\\n                \\\"J/(mol*K)\\\"\\n            }\\n        else\\n            table.remove(rintable.properties.TPMethods, 1)\\n        end\\n        if rintable.properties.TPMethods[2] ~= nil then\\n            if rintable.properties.TPMethods[2].method[\\\"43\\\"] == \\\"standard_entropy_cp_integration\\\" then\\n                table.remove(rintable.properties.TPMethods, 2)\\n            end\\n        end\\n    end\\n    rintable.properties.temp_import = nil\\n    for k, v in pairs(rintable.properties.TPMethods) do\\n        if v.eos_gas_crit_props ~= nil and v.method[\\\"9\\\"] == \\\"fluid_prsv\\\" then\\n            v.eos_gas_crit_props.names = {\\\"Tcr\\\", \\\"Pcr\\\", \\\"W\\\", \\\"k1\\\"}\\n            v.eos_gas_crit_props.units = {\\\"K\\\", \\\"bar\\\", \\\"\\\", \\\"\\\"}\\n        end\\n    end\\nend\\n\"\n     },\n     \"renderer\" :   \"JSON\",\n     \"label\" :   \"VertexSubstance\",\n     \"comment\" :   \"Import\"\n}"}}
