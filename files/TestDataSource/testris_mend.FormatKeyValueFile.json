{
     "block" :   {
          "defaults" :   {

          },
          "pairs" :   {

          },
          "matches" :   {
               "T1" :   {
                    "field" :   "properties.title"
               },
               "TY" :   {
                    "field" :   "properties.bibliographic_type",
                    "convert" :   {
                         "JOUR" :   "{\"0\": \"ARTICLE\"}",
                         "BOOK" :   "{\"1\": \"BOOK\"}",
                         "CHAPTER": "{\"4\": \"INBOOK\"}",
                         "CONF" :   "{\"3\": \"CONFERENCE\"}",
                         "CHAP" :   "{\"4\": \"INBOOK\"}",
                         "THES" :   "{\"10\": \"PHDTHESIS\"}",
                         "RPRT" :   "{\"15\": \"PREPRINT\"}",
                         "UNPD" :   "{\"13\": \"UNPUBLISHED\"}",
                         "INPR" :   "{\"15\": \"PREPRINT\"}",
                         "JFULL" :  "{\"0\": \"ARTICLE\"}"
                    }
               },
               "A1" :   {
                    "field" :   "properties.author"
               },
               "JF" :   {
                    "field" :   "properties.journal"
               },
               "VL" :   {
                    "field" :   "properties.volume"
               },
               "IS" :   {
                    "field" :   "properties.number"
               },
               "Y1" :   {
                    "field" :   "properties.year",
                    "script": "field = string.gsub(field, '/*', '') field = string.sub(field,1,4)"
               },
               "SP" :   {
                    "field" :   "properties.pages"
               },
               "N2" :   {
                    "field" :   "properties.abstracttext"
               },
               "PB" :   {
                    "field" :   "properties.publisher"
               },
               "AD" :   {
                    "field" :   "properties.address"
               },
               "ET" :   {
                    "field" :   "properties.edition"
               },
               "T2" :   {
                    "field" :   "properties.booktitle"
               },
               "UR" :   {
                    "field" :   "properties.links"
               },
               "EP" :   {
                    "field" :   "properties.pages"
               },
               "ED" :   {
                    "field" :   "properties.editor"
               },
               "ID" :   {
                    "field" :   "properties.shortname"
               },
               "TI" :   {
                    "field" :   "properties.title"
               },
               "BT" :   {
                    "field" :   "properties.booktitle"
               },
               "DO" :   {
                    "field" :   "properties.identifiers"
               },
                "KW" :   {
                    "field" :   "properties.keywords"
               }
          },
          "script" :   "if rintable.properties.shortname == \'\'  or rintable.properties.shortname == nil then rintable.properties.shortname = rintable.properties.author[1] end; if rintable.properties.bibliographic_type ~= '{\"1\": \"BOOK\"}' then rintable.properties.booktitle = \'\' end; if rintable.properties.bibliographic_type == '{\"1\": \"BOOK\"}' then rintable.properties.booktitle = rintable.properties.title end;
          size = 0
          for k,v in pairs(rintable.properties.author) do size = size+1 end
          year = rintable.properties.year
          if size == 1 then 
               shrtn = '['.. year ..  string.upper(string.sub(rintable.properties.author[1],1,3)) .. ']'
               rintable.properties.shortname = shrtn
          end;
          if size > 1 then 
          shrtn = '['.. year ..  string.upper(string.sub(rintable.properties.author[1],1,3)) .. '/' .. string.upper(string.sub(rintable.properties.author[2],1,3)) .. ']'
          rintable.properties.shortname = shrtn
          end;"
     },
     "format" :   {
          "head_regexp" :   "",
          "end_regexp" :   "^\\s*ER\\s*-\\s*",
          "key_regexp" :   "^\\s*([A-Z0-9]{2})\\s*-\\s*",
          "value_regexp" :   "",
          "value_next" :   "",
          "Ndata" :   0
     },
     "renderer" :   "RIS",
     "label" :   "VertexDataSource",
     "comment" :   "test"
}
