{
  "name": "prop",
  "doc": "Apache Thrift IDL definition for the properties service interface\n",
  "namespaces": {
    "*": "prop"
  },
  "includes": [
  ],
  "enums": [
    {
      "name": "ValueStatus",
      "doc": "Current status of value(s)\n",
      "members": [
        {
          "name": "EMPTY",
          "value": 0,
          "doc": "No value provided\n"
        },
        {
          "name": "ENTERED",
          "value": 1,
          "doc": "Value entered\n"
        },
        {
          "name": "TOCALCULATE",
          "value": 2,
          "doc": "Value to be calculated\n"
        },
        {
          "name": "CALCULATED",
          "value": 3,
          "doc": "Value calculated\n"
        }
      ]
    },
    {
      "name": "ErrorDistribution",
      "doc": "Type of statistical distribution of errors\n",
      "members": [
        {
          "name": "NORMAL",
          "value": 0,
          "doc": "Normal error distribution\n"
        },
        {
          "name": "LOGNORMAL",
          "value": 1,
          "doc": "Lognormal error distribution\n"
        },
        {
          "name": "PARETO",
          "value": 2,
          "doc": "Pareto error distribution\n"
        },
        {
          "name": "UNIFORM",
          "value": 3,
          "doc": "Uniform error distribution\n"
        },
        {
          "name": "OTHER",
          "value": 4,
          "doc": "Other error distribution\n"
        }
      ]
    },
    {
      "name": "MeasurementUnits",
      "doc": "Amount or concentration units for parts of compositions (SI units)\n",
      "members": [
        {
          "name": "U_MOLAMOUNT",
          "value": 0,
          "doc": "Amount in moles\n"
        },
        {
          "name": "U_MOLFRACTION",
          "value": 1,
          "doc": "Mole fraction - needs total amount of moles Moles\n"
        },
        {
          "name": "U_PARTIALPRESSURE",
          "value": 2,
          "doc": "Partial pressure in Pa - needs total pressure Ptotal and total moles Moles\n"
        },
        {
          "name": "U_MOLALITY",
          "value": 3,
          "doc": "Molality in mol per kg - needs mass of water-solvent Mwater\n"
        },
        {
          "name": "U_MOLARITY",
          "value": 4,
          "doc": "Molarity in mol per dm3 - needs total volume of aqueous phase Vaqtotal\n"
        },
        {
          "name": "U_MASS",
          "value": 5,
          "doc": "Mass in kg\n"
        },
        {
          "name": "U_MASSFRACTION",
          "value": 6,
          "doc": "Mass fraction - needs total mass Mass\n"
        },
        {
          "name": "U_LENGTH",
          "value": 7,
          "doc": "Length in m\n"
        },
        {
          "name": "U_AREA",
          "value": 8,
          "doc": "Area in m2\n"
        },
        {
          "name": "U_VOLUME",
          "value": 9,
          "doc": "Volume in m3\n"
        },
        {
          "name": "U_SURFACEDENSITY",
          "value": 10,
          "doc": "Surface density in mol per m2 - needs total surface area SurfArea\n"
        },
        {
          "name": "U_SURFACEFRACTION",
          "value": 11,
          "doc": "Surface fraction - needs total amount of surface (site) species SurfMoles or SurfMolal\n"
        },
        {
          "name": "U_SPECIFICSURFACEAREA_MASS",
          "value": 12,
          "doc": "specific surface area per unit mass in m2 per kg - needs total mass Mass\n"
        },
        {
          "name": "U_SPECIFICSURFACEAREA_VOLUME",
          "value": 13,
          "doc": "specific surface area per unit volume in m2 per dm3 - needs total volume Volume\n"
        }
      ]
    },
    {
      "name": "ConcentrationScales",
      "doc": "Concentration scales for substances (dependent components)\n",
      "members": [
        {
          "name": "C_MOLFRACTION",
          "value": 0,
          "doc": "Mole fraction concentration\n"
        },
        {
          "name": "C_PARTIALPRESSURE",
          "value": 1,
          "doc": "Partial pressure\n"
        },
        {
          "name": "C_MOLALITY",
          "value": 2,
          "doc": "Molality - moles per 1 kg of (water) solvent\n"
        },
        {
          "name": "C_MOLARITY",
          "value": 3,
          "doc": "Molarity - moles per 1 dm3 of aqueous electrolyte\n"
        },
        {
          "name": "C_MASSFRACTION",
          "value": 4,
          "doc": "Mass fraction\n"
        },
        {
          "name": "C_SURFACEFRACTION",
          "value": 5,
          "doc": "Surface (mole) fraction concentration\n"
        },
        {
          "name": "C_SURFACEDENSITY",
          "value": 6,
          "doc": "Surface density in moles per m2\n"
        },
        {
          "name": "C_SITEFRACTION",
          "value": 7,
          "doc": "Site fraction concentration\n"
        },
        {
          "name": "C_OTHER",
          "value": 8,
          "doc": "Other concentration scales\n"
        }
      ]
    },
    {
      "name": "SubstanceClass",
      "doc": "Classes (types) of substances (dependent components)\n",
      "members": [
        {
          "name": "COMPONENT",
          "value": 0,
          "doc": "Component of a condensed phase\n"
        },
        {
          "name": "GASFLUID",
          "value": 1,
          "doc": "Component of gaseous fluid\n"
        },
        {
          "name": "AQSOLUTE",
          "value": 2,
          "doc": "Aqueous solute (species in aqueous electrolyte phase)\n"
        },
        {
          "name": "AQSOLVENT",
          "value": 3,
          "doc": "Solvent in aqueous electrolyte phase\n"
        },
        {
          "name": "SURFSPECIES",
          "value": 4,
          "doc": "Surface (adsorption) species\n"
        },
        {
          "name": "SITEMOIETY",
          "value": 5,
          "doc": "Site moiety in a sublattice (solid) solution\n"
        },
        {
          "name": "OTHER_SC",
          "value": 6,
          "doc": "Other type of component\n"
        }
      ]
    },
    {
      "name": "AggregateState",
      "doc": "Standard phase aggregate state (for elements, substances, phases)\n",
      "members": [
        {
          "name": "GAS",
          "value": 0,
          "doc": "Gaseous aggregate state\n"
        },
        {
          "name": "LIQUID",
          "value": 1,
          "doc": "Condensed liquid aggregate state\n"
        },
        {
          "name": "GLASS",
          "value": 2,
          "doc": "Glass state\n"
        },
        {
          "name": "CRYSTAL",
          "value": 3,
          "doc": "Crystalline solid aggregate state\n"
        },
        {
          "name": "AQUEOUS",
          "value": 4,
          "doc": "Aqueous electrolyte\n"
        },
        {
          "name": "SURFACE",
          "value": 5,
          "doc": "Surface layer\n"
        },
        {
          "name": "OTHER_AS",
          "value": 6,
          "doc": "Other states\n"
        }
      ]
    }
  ],
  "typedefs": [
  ],
  "structs": [
    {
      "name": "Item",
      "doc": "Definition of (numerical) property item and array data for thermodynamic database\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "name",
          "typeId": "string",
          "doc": "Unique short name for the whole list such as IP\n",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "status",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "i32"
          },
          "doc": "Status of values (ENTERED if edited etc.): enum validated with class ValueStatus\n",
          "class": "ValueStatus",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "values",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "double"
          },
          "doc": "Data values - must always be set (to 0 if status = EMPTY)\n",
          "required": "req_out"
        },
        {
          "key": 4,
          "name": "errors",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "double"
          },
          "doc": "Errors (statistical confidence intervals)\n",
          "required": "optional"
        },
        {
          "key": 5,
          "name": "errortypes",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "i32"
          },
          "doc": "Type of statistical distribution of errors: enum validated with class ErrorDistribution\n",
          "class": "ErrorDistribution",
          "required": "optional"
        },
        {
          "key": 6,
          "name": "units",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "i32"
          },
          "doc": "Units of measurement, default - unscaled SI units: enum validated with class MeasurementUnits\n",
          "class": "MeasurementUnits",
          "required": "optional"
        },
        {
          "key": 7,
          "name": "names",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "string"
          },
          "doc": "Short name for each coefficient in values\n",
          "required": "optional"
        },
        {
          "key": 8,
          "name": "list_size",
          "typeId": "i32",
          "doc": "Number of coefficients in values\n",
          "required": "optional"
        },
        {
          "key": 9,
          "name": "datasources",
          "typeId": "set",
          "type": {
            "typeId": "set",
            "elemTypeId": "string"
          },
          "doc": "Shortnames of datasource database objects\n",
          "required": "optional"
        },
        {
          "key": 10,
          "name": "comment",
          "typeId": "string",
          "doc": "Explanatory comment e.g. confidence interval level\n",
          "required": "optional"
        }
      ]
    },
    {
      "name": "TimeStamp",
      "doc": "Timestamp\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "year",
          "typeId": "i16",
          "doc": "Year\n",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "month",
          "typeId": "i16",
          "doc": "Month\n",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "day",
          "typeId": "i16",
          "doc": "Day\n",
          "required": "req_out"
        },
        {
          "key": 4,
          "name": "hour",
          "typeId": "i16",
          "doc": "Hour\n",
          "required": "req_out"
        },
        {
          "key": 5,
          "name": "minute",
          "typeId": "i16",
          "doc": "Minute\n",
          "required": "req_out"
        },
        {
          "key": 6,
          "name": "second",
          "typeId": "i16",
          "doc": "Second\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "PropertiesPT",
      "doc": "Values of properties for a P,T pair\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "P",
          "typeId": "double",
          "doc": "Current pressure P\n",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "T",
          "typeId": "double",
          "doc": "Current temperature T\n",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "values",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "double"
          },
          "doc": "One or more property values\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "PropertiesPTArray",
      "doc": "Array of property data for several P,T pairs\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "name",
          "typeId": "string",
          "doc": "Unique short name for the whole list such as G0PT\n",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "status",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "i32"
          },
          "doc": "P,T pair property data status (ENTERED if edited etc.): enum validated with class ValueStatus\n",
          "class": "ValueStatus",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "pptv",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "PropertiesPT"
            }
          },
          "doc": "property P,T values (data array)\n",
          "required": "req_out"
        },
        {
          "key": 4,
          "name": "errors",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "double"
          },
          "doc": "Errors (statistical confidence intervals)\n",
          "required": "optional"
        },
        {
          "key": 5,
          "name": "errortypes",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "i32"
          },
          "doc": "Type of statistical distribution of errors: enum validated with class ErrorDistribution\n",
          "class": "ErrorDistribution",
          "required": "optional"
        },
        {
          "key": 6,
          "name": "units",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "i32"
          },
          "doc": "Units of measurement: enum validated with class MeasurementUnits\n",
          "class": "MeasurementUnits",  
          "required": "optional"
        },
        {
          "key": 7,
          "name": "names",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "string"
          },
          "doc": "Short names for each property in PropertiesPT values\n",
          "required": "optional"
        },
        {
          "key": 8,
          "name": "sizePT",
          "typeId": "i32",
          "doc": "Number of properties per P,T pair\n",
          "required": "optional"
        },
        {
          "key": 9,
          "name": "list_size",
          "typeId": "i32",
          "doc": "Number of values in a P,T pair data\n",
          "required": "optional"
        },
        {
          "key": 10,
          "name": "datasources",
          "typeId": "set",
          "type": {
            "typeId": "set",
            "elemTypeId": "string"
          },
          "doc": "Symbols of datasource database objects\n",
          "required": "optional"
        },
        {
          "key": 11,
          "name": "comment",
          "typeId": "string",
          "doc": "Explanatory comment\n",
          "required": "optional"
        }
      ]
    },
    {
      "name": "CompositionFormulaAmount",
      "doc": "Composition formula amount\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "formula",
          "typeId": "string",
          "doc": "Any valid elemental formula e.g. SiO2\n",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "amounts",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "double"
          },
          "doc": "Amounts of this formula (can be negative), Nfc numbers, default 0.0\n",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "units",
          "typeId": "i32",
          "doc": "Units of measurement, default MOLAMOUNT: enum validated with class MeasurementUnits\n",
          "class": "MeasurementUnits",
          "required": "req_out",
          "default": 0
        }
      ]
    },
    {
      "name": "CompositionFormulaAmountArray",
      "doc": "Array of composition formula amounts\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "name",
          "typeId": "string",
          "doc": "Unique short name for the whole list such as rock1\n",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "status",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "i32"
          },
          "doc": "Status of values (ENTERED if edited etc.): enum validated with class ValueStatus\n",
          "class": "ValueStatus",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "cfav",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "CompositionFormulaAmount"
            }
          },
          "doc": "Array of composition formula amounts\n",
          "required": "req_out"
        },
        {
          "key": 4,
          "name": "errors",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "double"
          },
          "doc": "Errors (statistical confidence intervals)\n",
          "required": "optional"
        },
        {
          "key": 5,
          "name": "errortype",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "i32"
          },
          "doc": "Type of statistical distribution of errors: enum validated with class ErrorDistribution\n",
          "class": "ErrorDistribution",
          "required": "optional"
        },
        {
          "key": 7,
          "name": "names",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "string"
          },
          "doc": "Short names for each item in the list\n",
          "required": "optional"
        },
        {
          "key": 8,
          "name": "Nfc",
          "typeId": "i32",
          "doc": "Number of formula amounts per formula\n",
          "required": "optional"
        },
        {
          "key": 9,
          "name": "list_size",
          "typeId": "i32",
          "doc": "Number of cfa objects (formulae)\n",
          "required": "optional"
        },
        {
          "key": 10,
          "name": "datasources",
          "typeId": "set",
          "type": {
            "typeId": "set",
            "elemTypeId": "string"
          },
          "doc": "Short names of datasource database objects\n",
          "required": "optional"
        },
        {
          "key": 11,
          "name": "comment",
          "typeId": "string",
          "doc": "Explanatory comment\n",
          "required": "optional"
        }
      ]
    }
  ],
  "constants": [
  ],
  "services": [
  ]
}
