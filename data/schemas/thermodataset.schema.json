{
  "name": "thermodataset",
  "doc": "Apache Thrift IDL definition for the thermodatabase service interface\n",
  "namespaces": {
    "*": "thermodataset"
  },
  "includes": [
"prop",
"element",
"substance",
"reaction",
"reactionset"
  ],
  "enums": [
    {
      "name": "ThermoDataSetType",
      "doc": "classes (types) of thermodynamic datasets\n",
      "members": [
        {
          "name": "TDS_REF",
          "value": 0,
          "doc": "Reference thermodynamic dataset (e.g. CODATA, mainly for .csv export)\n"
        },
        {
          "name": "TDS_LMA",
          "value": 1,
          "doc": "LMA-type thermodynamic dataset\n"
        },
        {
          "name": "TDS_GEM",
          "value": 2,
          "doc": "GEM-type thermodynamic dataset\n"
        },
        {
          "name": "TDS_OTHER",
          "value": 101,
          "doc": "therodynamic dataset of other type\n"
        }
      ]
    }
  ],
  "typedefs": [
    {
      "name": "elementdata",
      "typeId": "struct",
      "type": {
        "typeId": "struct",
        "class": "substance.ElementData"
      }
    },
    {
      "name": "substancedata",
      "typeId": "struct",
      "type": {
        "typeId": "struct",
        "class": "substance.SubstanceData"
      }
    },
    {
      "name": "substanceprops",
      "typeId": "struct",
      "type": {
        "typeId": "struct",
        "class": "substance.ThermoPropertiesSubstance"
      }
    },
    {
      "name": "prodreacdata",
      "typeId": "struct",
      "type": {
        "typeId": "struct",
        "class": "reaction.ReactionData"
      }
    },
    {
      "name": "reacsetdata",
      "typeId": "struct",
      "type": {
        "typeId": "struct",
        "class": "reactionset.ReactionSetData"
      }
    }
  ],
  "structs": [
    {
      "name": "ThermoDataSet",
      "doc": "Description of thermodynamic dataset for use in modelling\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "symbol",
          "typeId": "string",
          "doc": "Unique name\/ID of this thermodynamic dataset\n",
          "required": "required"
        },
        {
          "key": 2,
          "name": "stype",
          "class": "ThermoDataSetType",
          "typeId": "map",
          "type": {
            "typeId": "map",
            "keyTypeId": "i32",
            "valueTypeId": "string"
          },
          "doc": "Type of thermodataset - validate with class ThermoDataSetType\n",
          "required": "required",
          "default": {
            "2": "TDS_GEM"
          }
        },
        {
          "key": 3,
          "name": "level",
          "typeId": "i32",
          "doc": "Level of the reactionset\n",
          "required": "required",
          "default": 0
        },
        {
          "key": 4,
          "name": "name",
          "typeId": "string",
          "doc": "Extended name of the thermodataset (not compulsory)\n",
          "required": "req_out"
        },
        {
          "key": 5,
          "name": "element_list",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "string"
          },
          "doc": "List of element symbols covered by this reactionset - may be replaced by a graph\n",
          "required": "optional"
        },
        {
          "key": 6,
          "name": "species_map",
          "typeId": "map",
          "type": {
            "typeId": "map",
            "keyTypeId": "string",
            "valueTypeId": "i32"
          },
          "doc": "Map of species symbols and types (class SpeciesTypeRS) covered by reactionset - a graph?\n",
          "required": "optional"
        },
        {
          "key": 7,
          "name": "reactionsets_map",
          "class": "ReactionSetType",
          "typeId": "map",
          "type": {
            "typeId": "map",
            "keyTypeId": "string",
            "valueTypeId": "i32"
          },
          "doc": "Symbol of reactionsets used by this thermodataset if of LMA_TDS type\n",
          "required": "optional"
        },
        {
          "key": 8,
          "name": "sourcetdbs",
          "typeId": "map",
          "type": {
            "typeId": "map",
            "keyTypeId": "i32",
            "valueTypeId": "string"
          },
          "doc": "Source TDB: list of enums validated with the class SourceTDB\n",
          "class": "SourceTDB",
          "required": "optional"
        },
        {
          "key": 9,
          "name": "elements",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "element.ElementInfo"
            }
          },
          "doc": "List of element symbols and infos covered by this reactionset - may be replaced by a graph\n",
          "required": "req_out"
        },
        {
          "key": 10,
          "name": "limitsTP",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.LimitsTP"
          },
          "doc": "Overall lower and upper T, P limits for T,P corrections\n",
          "required": "req_out",
          "default": {
            "range": 0,
            "lowerT": 273.15,
            "upperT": 298.15,
            "lowerP": 0.1,
            "upperP": 1000000
          }
        },
        {
          "key": 11,
          "name": "comment",
          "typeId": "string",
          "doc": "Comment e.g. who entered\/modified, ...\n",
          "required": "optional"
        },
        {
          "key": 12,
          "name": "datasources",
          "typeId": "set",
          "type": {
            "typeId": "set",
            "elemTypeId": "string"
          },
          "doc": "Labels of datasource DB objects - may be obsolete\n",
          "required": "optional"
        },
        {
          "key": 13,
          "name": "time_stamp",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.TimeStamp"
          },
          "doc": "Timestamp\n",
          "required": "optional"
        }
      ]
    },
    {
      "name": "ThermoDataSets",
      "doc": "Definition of an array of thermodata sets\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 2,
          "name": "thermodatasets",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "ThermoDataSet"
            }
          },
          "doc": "List of thermodata sets\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "ThermoDataSetData",
      "doc": "work structure keeping the data for thermodataset object\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "Nmasts",
          "typeId": "i32",
          "doc": "number of master species taking part in this reactionset\n",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "masts",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "substance.SubstanceData"
            }
          },
          "doc": "array of data for master species\n",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "Nprods",
          "typeId": "i32",
          "doc": "number of product species taking part in this reactionset\n",
          "required": "optional"
        },
        {
          "key": 4,
          "name": "prods",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "substance.SubstanceData"
            }
          },
          "doc": "array of data for product species\n",
          "required": "req_out"
        },
        {
          "key": 5,
          "name": "Npreacs",
          "typeId": "i32",
          "doc": "number of product species formation reactions in this reactionset\n",
          "required": "req_out"
        },
        {
          "key": 6,
          "name": "preacs",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "reaction.ReactionData"
            }
          },
          "doc": "array of data for product formation reactions\n",
          "required": "req_out"
        },
        {
          "key": 7,
          "name": "Nelems",
          "typeId": "i32",
          "doc": "number of elements used in this thermodataset\n",
          "required": "req_out"
        },
        {
          "key": 8,
          "name": "elems",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "substance.ElementData"
            }
          },
          "doc": "array of data for elements\n",
          "required": "req_out"
        },
        {
          "key": 9,
          "name": "Nreacsets",
          "typeId": "i32",
          "doc": "number of reactionsets used in this thermodataset\n",
          "required": "req_out"
        },
        {
          "key": 10,
          "name": "preacsets",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "reactionset.ReactionSetData"
            }
          },
          "doc": "array of data for reactionsets\n",
          "required": "req_out"
        },
        {
          "key": 11,
          "name": "processed",
          "typeId": "bool",
          "doc": "indicator of processing the thermodataset\n",
          "required": "req_out",
          "default": 0
        }
      ]
    }
  ],
  "constants": [
  ],
  "services": [
  ]
}
