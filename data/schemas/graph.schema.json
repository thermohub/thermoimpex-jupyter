{
  "name": "graph",
  "doc": "Apache Thrift IDL definition for GraphSON and TitanDB graph database interface\n",
  "namespaces": {
    "*": "graph"
  },
  "includes": [
"prop",
"datasource",
"element",
"substance"
  ],
  "enums": [
  ],
  "typedefs": [
  ],
  "structs": [
    {
      "name": "VertexDatasource",
      "doc": "Datasource vertex document\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "_id",
          "typeId": "i32",
          "doc": "Database ID (0 if not known)\n",
          "required": "required"
        },
        {
          "key": 2,
          "name": "_type",
          "typeId": "string",
          "doc": "This field must contain \"vertex\"\n",
          "required": "required",
          "default": "vertex"
        },
        {
          "key": 3,
          "name": "_label",
          "typeId": "string",
          "doc": "This label should be the same for all datasources\n",
          "required": "required",
          "default": "datasource"
        },
        {
          "key": 4,
          "name": "properties",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "datasource.DataSource"
          },
          "doc": "properties of datasource as embedded object\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "VertexElement",
      "doc": "Element vertex document\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "_id",
          "typeId": "i32",
          "doc": "Database ID (0 if not known)\n",
          "required": "required"
        },
        {
          "key": 2,
          "name": "_type",
          "typeId": "string",
          "doc": "This field must contain \"vertex\"\n",
          "required": "required",
          "default": "vertex"
        },
        {
          "key": 3,
          "name": "_label",
          "typeId": "string",
          "doc": "This label should be the same for all elements\n",
          "required": "required",
          "default": "element"
        },
        {
          "key": 4,
          "name": "properties",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "element.Element"
          },
          "doc": "properties of element as embedded object\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "VertexSubstance",
      "doc": "Substance vertex document\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "_id",
          "typeId": "i32",
          "doc": "Database ID (0 if not known)\n",
          "required": "required"
        },
        {
          "key": 2,
          "name": "_type",
          "typeId": "string",
          "doc": "This field must contain \"vertex\"\n",
          "required": "required",
          "default": "vertex"
        },
        {
          "key": 3,
          "name": "_label",
          "typeId": "string",
          "doc": "This label should be the same for all elements\n",
          "required": "required",
          "default": "substance"
        },
        {
          "key": 4,
          "name": "properties",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "substance.Substance"
          },
          "doc": "properties of element as embedded object\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "Citing",
      "doc": "Edge: citing (properties for citing edges)\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "for_field",
          "typeId": "string",
          "doc": "Citing datasource for data field { \"for_field\": \"logK\" }\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "EdgeCiting",
      "doc": "Edge of type \"citing\" definition\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "_id",
          "typeId": "i32",
          "doc": "id of this edge record or 0 if unknown\n",
          "required": "required"
        },
        {
          "key": 2,
          "name": "_type",
          "typeId": "string",
          "doc": "this must be always \"edge\"\n",
          "required": "required",
          "default": "edge"
        },
        {
          "key": 3,
          "name": "_outV",
          "typeId": "i32",
          "doc": "id of outgoing vertex of any type\n",
          "required": "required"
        },
        {
          "key": 4,
          "name": "_inV",
          "typeId": "i32",
          "doc": "id of incoming datasource vertex\n",
          "required": "required"
        },
        {
          "key": 5,
          "name": "_label",
          "typeId": "string",
          "doc": "This label must be \"citing\"\n",
          "required": "required",
          "default": "citing"
        },
        {
          "key": 6,
          "name": "properties",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "Citing"
          },
          "doc": "Properties of citing edge\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "Inherits",
      "doc": "Edge inherits (properties for inherits edges)\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "for_prop",
          "typeId": "string",
          "doc": "This string contains one of the keywords for substance properties, e.g. \"for_prop\" \"sG0\"\n",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "asop",
          "typeId": "string",
          "doc": "This string identifies the relation: { \"as\": \"equal\" } | ...\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "EdgeInherits",
      "doc": "Edge of type \"inherits\" definition\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "_id",
          "typeId": "i32",
          "doc": "id of this edge record or 0 if unknown\n",
          "required": "required"
        },
        {
          "key": 2,
          "name": "_type",
          "typeId": "string",
          "doc": "this must be always \"edge\"\n",
          "required": "required",
          "default": "edge"
        },
        {
          "key": 3,
          "name": "_outV",
          "typeId": "i32",
          "doc": "id of outgoing vertex of any type\n",
          "required": "required"
        },
        {
          "key": 4,
          "name": "_inV",
          "typeId": "i32",
          "doc": "id of incoming datasource vertex\n",
          "required": "required"
        },
        {
          "key": 5,
          "name": "_label",
          "typeId": "string",
          "doc": "This label must be \"inherits\"\n",
          "required": "required",
          "default": "inherits"
        },
        {
          "key": 6,
          "name": "properties",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "Inherits"
          },
          "doc": "Properties of inherits edge\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "Sstate",
      "doc": "Edge sstate: connecting a substance representing a standard state of an element to the corresponding element\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "st_coeff",
          "typeId": "double",
          "doc": "Stoichiometry coefficient of element in substance, e.g. 1 for C; 2 for O2\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "EdgeSstate",
      "doc": "Edge of type \"sstate\" definition\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "_id",
          "typeId": "i32",
          "doc": "id of this edge record or 0 if unknown\n",
          "required": "required"
        },
        {
          "key": 2,
          "name": "_type",
          "typeId": "string",
          "doc": "this must be always \"edge\"\n",
          "required": "required",
          "default": "edge"
        },
        {
          "key": 3,
          "name": "_outV",
          "typeId": "i32",
          "doc": "id of outgoing vertex of any type\n",
          "required": "required"
        },
        {
          "key": 4,
          "name": "_inV",
          "typeId": "i32",
          "doc": "id of incoming datasource vertex\n",
          "required": "required"
        },
        {
          "key": 5,
          "name": "_label",
          "typeId": "string",
          "doc": "This label must be \"sstate\"\n",
          "required": "required",
          "default": "sstate"
        },
        {
          "key": 6,
          "name": "properties",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "Sstate"
          },
          "doc": "Properties of sstate edge\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "Vertex",
      "doc": "Generalized vertex\n",
      "isException": false,
      "isUnion": true,
      "fields": [
        {
          "key": 1,
          "name": "v_datasource",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "VertexDatasource"
          },
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "v_element",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "VertexElement"
          },
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "v_substance",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "VertexSubstance"
          },
          "required": "req_out"
        }
      ]
    },
    {
      "name": "Edge",
      "doc": "Generalized edge\n",
      "isException": false,
      "isUnion": true,
      "fields": [
        {
          "key": 1,
          "name": "e_citing",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "EdgeCiting"
          },
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "e_inherits",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "EdgeInherits"
          },
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "e_sstate",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "EdgeSstate"
          },
          "required": "req_out"
        }
      ]
    },
    {
      "name": "GraphData",
      "doc": "Generalized graph data (file)\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "mode",
          "typeId": "string",
          "doc": "Mode of rendering  NORMAL [ | EXTENDED | COMPACT ]\n",
          "required": "req_out",
          "default": "NORMAL"
        },
        {
          "key": 2,
          "name": "vertices",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "union",
            "elemType": {
              "typeId": "union",
              "class": "Vertex"
            }
          },
          "doc": "List of vertices (documents), can be empty (only graph edges)\n",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "edges",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "union",
            "elemType": {
              "typeId": "union",
              "class": "Edge"
            }
          },
          "doc": "list of edges (graph links), can be empty for a non-graph data (only documents)\n",
          "required": "req_out"
        }
      ]
    }
  ],
  "constants": [
  ],
  "services": [
  ]
}
