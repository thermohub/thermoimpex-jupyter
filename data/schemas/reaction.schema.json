{
  "name": "reaction",
  "doc": "Apache Thrift IDL definition for the reaction service interface\n",
  "namespaces": {
    "*": "reaction"
  },
  "includes": [
"prop",
"element",
"substance"
  ],
  "enums": [
    {
      "name": "ReactionType",
      "doc": "Classes (types) of reactions\n",
      "members": [
        {
          "name": "RE_TRIVIAL",
          "value": 0,
          "doc": "Trivial reaction for calculation of reaction effects\n"
        },
        {
          "name": "FE_FORMATION",
          "value": 1,
          "doc": "Formation reaction of a product from master species\n"
        },
        {
          "name": "RE_DISSOLUTION",
          "value": 2,
          "doc": "Dissolution reaction for a mineral (end member) or gas in\n"
        },
        {
          "name": "RE_EVAPORATION",
          "value": 3,
          "doc": "Dissolution reaction for mineral\/liquid in gas\n"
        },
        {
          "name": "RE_ELTRANSFER",
          "value": 4,
          "doc": "Redox reaction (electron transfer)\n"
        },
        {
          "name": "RE_ISOELECTRIC",
          "value": 5,
          "doc": "Isoelectric reaction\n"
        },
        {
          "name": "RE_ISOCOULOMBIC",
          "value": 6,
          "doc": "Isocoulombic reaction\n"
        },
        {
          "name": "RE_IONEXCHANGE",
          "value": 7,
          "doc": "Ion exchange reaction\n"
        },
        {
          "name": "RE_OTHER",
          "value": 101,
          "doc": "Other type of reaction\n"
        }
      ]
    },
    {
      "name": "ReactionTPMethodType",
      "members": [
        {
          "name": "logk_fpt_function",
          "value": 0,
          "doc": "calculation of logK of reactions as they depend functionally on P and T; ReacDC\n"
        },
        {
          "name": "adsor_ion_exchange",
          "value": 1,
          "doc": "calculations via adsorption or ion exchange constants, using LFER correlations; ReacDC (reserved)\n"
        },
        {
          "name": "iso_compounds_grichuk88",
          "value": 2,
          "doc": "calculation of parameters for isotopic forms of compounds (Grichuk, 1988)\n"
        },
        {
          "name": "logk_nordstrom_munoz88",
          "value": 3,
          "doc": "calculation from empirical function logK=f(T) (Nordstrom and Munoz, 1988); ReacDC only\n"
        },
        {
          "name": "logk_1_term_extrap0",
          "value": 4,
          "doc": "one-term extrapolation assuming dHr=0 and logK=const; ReacDC\n"
        },
        {
          "name": "logk_1_term_extrap1",
          "value": 5,
          "doc": "one-term extrapolation assuming dGr=const (Gu et al., 1994); ReacDC\n"
        },
        {
          "name": "logk_2_term_extrap",
          "value": 6,
          "doc": "two-term extrapolation; ReacDC only\n"
        },
        {
          "name": "logk_3_term_extrap",
          "value": 7,
          "doc": "three-term extrapolation assuming dCpr=const; ReacDC\n"
        },
        {
          "name": "logk_lagrange_interp",
          "value": 8,
          "doc": "Lagrange polynomial interpolation over logK(TP) array; ReacDC\n"
        },
        {
          "name": "logk_marshall_frank78",
          "value": 9,
          "doc": "calculation of logK=f(T,P) from density equation (Marshall and Franck, 1978); ReacDC\n"
        },
        {
          "name": "solute_eos_ryzhenko_gems",
          "value": 10,
          "doc": "calculation of logK=f(T,P) with modified Ryzhenko-Bryzgalin model\n"
        },
        {
          "name": "dr_heat_capacity_ft",
          "value": 11,
          "doc": "calculation of reaction properties from empirical from 5-term Cp(T); ReacDC\n"
        },
        {
          "name": "dr_volume_fpt",
          "value": 12,
          "doc": "calculation of reaction properties from empirical V(P,T); ReacDC\n"
        },
        {
          "name": "dr_volume_constant",
          "value": 13,
          "doc": "reaction molar volume constant at references T and P\n"
        }
      ]
    },
    {
      "name": "ReactionComponentType",
      "doc": "Classes (types) of reaction components\n",
      "members": [
        {
          "name": "RC_REACTANT",
          "value": 0,
          "doc": "Component properties available\n"
        },
        {
          "name": "RC_PRODUCT",
          "value": 1,
          "doc": "Component properties to be defined via this reaction properties\n"
        },
        {
          "name": "RC_CATALYST",
          "value": 2,
          "doc": "Catalyzes the reaction but is not consumed in it\n"
        },
        {
          "name": "RC_OTHER",
          "value": 3,
          "doc": "Other type of reaction component\n"
        }
      ]
    }
  ],
  "typedefs": [
  ],
  "structs": [
    {
      "name": "ReactionTPMethodData",
      "doc": "Data structure describing method codes and data for computing P,T corrections to standard properties of reaction\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "method",
          "typeId": "map",
          "type": {
            "typeId": "map",
            "keyTypeId": "i32",
            "valueTypeId": "string"
          },
          "doc": "Method type - validate with class SubstanceEoSMethodType\n",
          "class": "ReactionTPMethodType",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "limitsTP",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.LimitsTP"
          },
          "doc": "TP limits of applicability\n",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "logk_pt_values",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.PropertiesPTArray"
          },
          "doc": "Interpolation array for logK(P,T) values\n",
          "required": "optional"
        },
        {
          "key": 11,
          "name": "logk_ft_coeffs",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Coefficients of logK(T) function per mole  a0 to a6 \"logKTc\"\n",
          "required": "optional"
        },
        {
          "key": 12,
          "name": "dr_heat_capacity_ft_coeffs",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Coefficients of Cp0(T) function per mole \"drCpTc\"\n",
          "required": "optional"
        },
        {
          "key": 13,
          "name": "dr_volume_fpt_coeffs",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Coefficients of V0(T,P) function per mole \"drVpTc\"\n",
          "required": "optional"
        },
        {
          "key": 14,
          "name": "dr_ryzhenko_coeffs",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Coefficients of Ryzhenko-Bryzgalin model \"drRBc\n",
          "required": "optional"
        },
        {
          "key": 15,
          "name": "dr_marshall_franck_coeffs",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Coefficients of Marshall-Franck density (MFD) model\n",
          "required": "optional"
        },
        {
          "key": 19,
          "name": "isotop_lna_coeffs",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Coeffs of 1000ln(alpha) = f(T) equation a0 to a4\n",
          "required": "optional"
        },
        {
          "key": 20,
          "name": "isotop_counter_fraction",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Mole fraction of counter-isotope in natural mixture (for isotopes)\n",
          "required": "optional"
        }
      ]
    },
    {
      "name": "Reaction",
      "doc": "Description of a reaction between substances\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "symbol",
          "typeId": "string",
          "doc": "Unique name\/ID of this reaction (e.g. product species name)\n",
          "required": "required"
        },
        {
          "key": 2,
          "name": "sourcetdb",
          "typeId": "map",
          "type": {
            "typeId": "map",
            "keyTypeId": "i32",
            "valueTypeId": "string"
          },
          "doc": "Source TDB: enum validated with class SourceTDB\n",
          "class": "SourceTDB",
          "required": "required"
        },
        {
          "key": 3,
          "name": "level",
          "typeId": "i32",
          "doc": "Level of the reaction (for superimposed IC or LMA reaction sets)\n",
          "required": "required",
          "default": 0
        },
        {
          "key": 4,
          "name": "equation",
          "typeId": "string",
          "doc": "Equation of the reaction (not compulsory)\n",
          "required": "req_out"
        },
        {
          "key": 5,
          "name": "name",
          "typeId": "string",
          "doc": "Name of the reaction (comment, not compulsory)\n",
          "required": "req_out"
        },
        {
          "key": 6,
          "name": "reactyp",
          "typeId": "map",
          "type": {
            "typeId": "map",
            "keyTypeId": "i32",
            "valueTypeId": "string"
          },
          "doc": "Type (class) of reaction: enum validated with class ReactionType\n",
          "class": "ReactionType",
          "required": "req_out",
          "default": {
            "0": "RE_TRIVIAL"
          }
        },
        {
          "key": 7,
          "name": "Tst",
          "typeId": "double",
          "doc": "Reference temperature for standard state (usually 298.15 K)\n",
          "required": "req_out",
          "default": 298.15
        },
        {
          "key": 8,
          "name": "Pst",
          "typeId": "double",
          "doc": "Reference pressure (usually 1 bar = 10^5 Pa, sometimes 1.013 bar = 1 atm\n",
          "required": "req_out",
          "default": 100000
        },
        {
          "key": 9,
          "name": "logKr",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Standard equilibrium constant \"logK0\" (set in log10 units)\n",
          "required": "req_out"
        },
        {
          "key": 10,
          "name": "drsm_volume",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Standard volume effect per mole \"drV0\" m3\/mol\n",
          "required": "req_out"
        },
        {
          "key": 11,
          "name": "drsm_gibbs_energy",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Standard Gibbs energy effect per mole  \"drGO\" J\/mol\n",
          "required": "req_out"
        },
        {
          "key": 12,
          "name": "drsm_enthalpy",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Standard enthalpy effect per mole \"drH0\" J\/mol\n",
          "required": "req_out"
        },
        {
          "key": 13,
          "name": "drsm_entropy",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Standard entropy effect of reaction \"drS0\" J\/K\/mol\n",
          "required": "req_out"
        },
        {
          "key": 14,
          "name": "drsm_heat_capacity_p",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.Item"
          },
          "doc": "Standard heat capacity effect per mole \"drCp0\" J\/K\/mol\n",
          "required": "req_out"
        },
        {
          "key": 21,
          "name": "TPMethods",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "ReactionTPMethodData"
            }
          },
          "doc": "One or more method codes and data for computing P,T corrections to standard properties\n",
          "required": "req_out"
        },
        {
          "key": 22,
          "name": "limitsTP",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.LimitsTP"
          },
          "doc": "Overall T,P limits for all methods involved\n",
          "required": "req_out",
          "default": {
            "range": 0,
            "lowerT": 273.15,
            "upperT": 298.15,
            "lowerP": 0.1,
            "upperP": 1000000
          }
        },
        {
          "key": 25,
          "name": "comment",
          "typeId": "string",
          "doc": "Comment - e.g. who entered\/modified, ...\n",
          "required": "optional"
        },
        {
          "key": 26,
          "name": "datasources",
          "typeId": "set",
          "type": {
            "typeId": "set",
            "elemTypeId": "string"
          },
          "doc": "Labels of datasource DB objects\n",
          "required": "optional"
        },
        {
          "key": 27,
          "name": "time_stamp",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "prop.TimeStamp"
          },
          "doc": "Timestamp (\n",
          "required": "optional"
        },
        {
          "key": 28,
          "name": "elements",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "element.ElementInfo"
            }
          },
          "doc": "Information on elements present in the reaction\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "Reactions",
      "doc": "Definition of an array of reactions\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 2,
          "name": "reactions",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "Reaction"
            }
          },
          "doc": "List of reactions\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "ReactionComponentData",
      "doc": "Data for processing reactions; properties from a substance connected to the reaction via takes edges\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "SC",
          "typeId": "double",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "mV0",
          "typeId": "double",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "mG0",
          "typeId": "double",
          "required": "req_out"
        },
        {
          "key": 4,
          "name": "mH0",
          "typeId": "double",
          "required": "req_out"
        },
        {
          "key": 5,
          "name": "mS0",
          "typeId": "double",
          "required": "req_out"
        },
        {
          "key": 6,
          "name": "mCp0",
          "typeId": "double",
          "required": "req_out"
        },
        {
          "key": 7,
          "name": "fCharge",
          "typeId": "double",
          "required": "req_out"
        },
        {
          "key": 9,
          "name": "rct",
          "typeId": "i32",
          "doc": "Type of reaction component: enum validated with class ReactionComponentType\n",
          "required": "req_out"
        },
        {
          "key": 10,
          "name": "subsid",
          "typeId": "i32",
          "required": "optional"
        },
        {
          "key": 11,
          "name": "symbol",
          "typeId": "string",
          "required": "optional"
        },
        {
          "key": 12,
          "name": "formula",
          "typeId": "string",
          "required": "optional"
        }
      ]
    },
    {
      "name": "ReactionData",
      "doc": "Work structure keeping the data to check\/calculate reaction\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "Nrcs",
          "typeId": "i16",
          "doc": "Number of components taking part in the reaction\n",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "rcs",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "struct",
            "elemType": {
              "typeId": "struct",
              "class": "ReactionComponentData"
            }
          },
          "doc": "Array of data for reacting components\n",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "T",
          "typeId": "double",
          "doc": "Current temperature in K\n",
          "required": "req_out"
        },
        {
          "key": 4,
          "name": "P",
          "typeId": "double",
          "doc": "Current pressure in bar (Pa?). These properties should already be for current T,P\n",
          "required": "req_out"
        },
        {
          "key": 10,
          "name": "logKr",
          "typeId": "double",
          "doc": "Standard equilibrium constant \"logK0\" (log10, set in units)\n",
          "required": "req_out"
        },
        {
          "key": 11,
          "name": "lnK0",
          "typeId": "double",
          "doc": "Equilibrium constant from drG0 = -RTlnK0\n",
          "required": "req_out"
        },
        {
          "key": 12,
          "name": "drV0",
          "typeId": "double",
          "doc": "Standard volume effect per mole \"drV0\" m3\/mol\n",
          "required": "req_out"
        },
        {
          "key": 13,
          "name": "drG0",
          "typeId": "double",
          "doc": "Standard Gibbs energy effect per mole  \"drGO\" J\/mol\n",
          "required": "req_out"
        },
        {
          "key": 14,
          "name": "drH0",
          "typeId": "double",
          "doc": "Standard enthalpy effect per mole \"drH0\" J\/mol\n",
          "required": "req_out"
        },
        {
          "key": 15,
          "name": "drS0",
          "typeId": "double",
          "doc": "Standard entropy effect of reaction \"S0f\" J\/K\/mol\n",
          "required": "req_out"
        },
        {
          "key": 16,
          "name": "drCp0",
          "typeId": "double",
          "doc": "Standard heat capacity effect per mole \"Cp0\" J\/K\/mol\n",
          "required": "req_out"
        },
        {
          "key": 19,
          "name": "slaveid",
          "typeId": "i32",
          "doc": "ID of \"product\" substance for which to calculate properties\n",
          "required": "optional"
        },
        {
          "key": 20,
          "name": "computed",
          "typeId": "bool",
          "doc": "Set to true if the reaction props or slave props computed\n",
          "required": "req_out",
          "default": 0
        }
      ]
    },
    {
      "name": "ThermoPropertiesReaction",
      "doc": "Structure keeping the thermodynamic properites which can be calculated for a reaction\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "reaction_gibbs_energy",
          "typeId": "double",
          "doc": "The apparent standard molar Gibbs free energy of reaction\n",
          "required": "req_out"
        },
        {
          "key": 2,
          "name": "reaction_helmholtz_energy",
          "typeId": "double",
          "doc": "The apparent standard molar Helmholtz free energy of reaction\n",
          "required": "req_out"
        },
        {
          "key": 3,
          "name": "reaction_internal_energy",
          "typeId": "double",
          "doc": "The apparent standard molar internal energy of reaction\n",
          "required": "req_out"
        },
        {
          "key": 4,
          "name": "reaction_enthalpy",
          "typeId": "double",
          "doc": "The apparent standard molar enthalpy of reaction\n",
          "required": "req_out"
        },
        {
          "key": 5,
          "name": "reaction_entropy",
          "typeId": "double",
          "doc": "The standard molar entropy of reaction\n",
          "required": "req_out"
        },
        {
          "key": 6,
          "name": "reaction_volume",
          "typeId": "double",
          "doc": "The standard molar volume of reaction\n",
          "required": "req_out"
        },
        {
          "key": 7,
          "name": "reaction_heat_capacity_cp",
          "typeId": "double",
          "doc": "The standard molar isobaric heat capacity of reaction\n",
          "required": "req_out"
        },
        {
          "key": 8,
          "name": "reaction_heat_capacity_cv",
          "typeId": "double",
          "doc": "The standard molar isochoric heat capacity of reaction\n",
          "required": "req_out"
        },
        {
          "key": 9,
          "name": "logKr",
          "typeId": "double",
          "doc": "Standard equilibrium constant \"logK0\" (log10, set in units)\n",
          "required": "req_out"
        },
        {
          "key": 10,
          "name": "lnK0",
          "typeId": "double",
          "doc": "Equilibrium constant from drG0 = -RTlnK0\n",
          "required": "req_out"
        }
      ]
    }
  ],
  "constants": [
  ],
  "services": [
  ]
}
