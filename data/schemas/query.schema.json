{
  "name": "query",
  "doc": "Apache Thrift IDL definition for the query service interface\n",
  "namespaces": {
    "*": "query"
  },
  "includes": [
  ],
  "enums": [
    {
      "name": "QueryStyle",
      "doc": "Classes of query style\n",
      "members": [
        {
          "name": "QUndef",
          "value": -1,
          "doc": "Undefined query\n"
        },
        {
          "name": "QTemplate",
          "value": 0,
          "doc": "Fields template query\n"
        },
        {
          "name": "QAll",
          "value": 1,
          "doc": "Select all records\n"
        },
        {
          "name": "QEdgesFrom",
          "value": 2,
          "doc": "Select outgoing edges\n"
        },
        {
          "name": "QEdgesTo",
          "value": 3,
          "doc": "Select incoming edges\n"
        },
        {
          "name": "QEdgesAll",
          "value": 5,
          "doc": "Select edges by query\n"
        },
        {
          "name": "QAQL",
          "value": 6,
          "doc": "AQL-style query\n"
        },
        {
          "name": "QEJDB",
          "value": 7,
          "doc": "EJDB-style query\n"
        }
      ]
    }
  ],
  "typedefs": [
  ],
  "structs": [
    {
      "name": "ConditionData",
      "doc": "Struct for query condition\n",
      "isException": false,
      "isUnion": false,
      "fields": [
        {
          "key": 1,
          "name": "style",
          "typeId": "i32",
          "doc": "query style\n",
          "required": "required"
        },
        {
          "key": 2,
          "name": "find",
          "typeId": "string",
          "doc": "query string\n",
          "required": "req_out"
        }
      ]
    },
    {
      "name": "Query",
      "doc": "description of query record\n",
      "isException": false,
      "isUnion": false,
      "to_select": [ "4", "5", "6.1", "1" ],
      "to_key": [ "4" ],
       "fields": [
        {
          "key": 1,
          "name": "_id",
          "typeId": "string",
          "doc": "id of this query record or 0 if unknown\n",
          "required": "required"
        },
        {
          "key": 2,
          "name": "_key",
          "typeId": "string",
          "doc": "ID of this record within the impex collection (part of _id)\n",
          "required": "required"
        },
        {
          "key": 3,
          "name": "_rev",
          "typeId": "string",
          "doc": "Code of revision (changed by the system at every update)\n",
          "required": "required"
        },
        {
          "key": 4,
          "name": "name",
          "typeId": "string",
          "doc": "short name of query (used as key field)\n",
          "required": "required"
        },
        {
          "key": 5,
          "name": "comment",
          "typeId": "string",
          "doc": "description of query\n",
          "required": "req_out"
        },
        {
          "key": 6,
          "name": "condition",
          "typeId": "struct",
          "type": {
            "typeId": "struct",
            "class": "ConditionData"
          },
          "doc": "query filter condtition\n",
          "required": "required"
        },
        {
          "key": 7,
          "name": "collect",
          "typeId": "list",
          "type": {
            "typeId": "list",
            "elemTypeId": "string"
          },
          "doc": "list of fields to collect\n",
          "required": "required"
        },
        {
          "key": 8,
          "name": "qschema",
          "typeId": "string",
          "doc": "query for schema\n",
          "required": "req_out"
        }
      ]
    }
  ],
  "constants": [
  ],
  "services": [
  ]
}
