{
     "block": {
          "defaults": {
               "properties.sourcetdb": "{\"0\" : \"CODATA\"}",
               "properties.Tst": "298.15",
               "properties.Pst": "1e05",
               "properties.datasources": "[\"codata89\"]",
               "properties.aggregate_state": "{\"4\" : \"AS_AQUEOUS\"}",
               "properties.class_": "{\"2\" : \"SC_AQSOLUTE\"}"
          },
          "matches": {
               "substance": {
                    "field": "properties.symbol",
                    "ignore": false,
                    "script": ""
               },
               "formula": {
                    "field": "properties.formula"
               },
               "state": {
                    "field": "properties.aggregate_state",
                    "convert": {
                         "aq": "{\"4\" :   \"AS_AQUEOUS\"}",
                         "g": "{\"0\" :   \"AS_GAS\"}",
                         "cr": "{\"3\" :   \"AS_CRYSTAL\"}",
                         "s": "{\"3\" :   \"AS_CRYSTAL\"}",
                         "l": "{\"1\" :   \"AS_LIQUID\"}",
                         "f": "{\"0\" :   \"AS_GAS\"}",
                         "p": "{\"8\" :   \"AS_PLASMA\"}"
                    }
               },
               "dHf_298": {
                    "field": "properties.sm_enthalpy.values",
                    "ignore": false
               },
               "dHf_298_error": {
                    "field": "properties.sm_enthalpy.errors",
                    "ignore": false
               },
               "S_298": {
                    "field": "properties.sm_entropy_abs.values",
                    "ignore": false
               },
               "S_298_error": {
                    "field": "properties.sm_entropy_abs.errors",
                    "ignore": false
               },
               "ref": {
                    "field": "properties.datasources.0",
                    "ignore": false
               }
          },
          "script":   "rintable.properties.name = rintable.properties.symbol; if rintable.properties.sm_gibbs_energy ~= nil then rintable.properties.sm_gibbs_energy.units = {'kJ/mol'} end; if rintable.properties.sm_enthalpy ~= nil then rintable.properties.sm_enthalpy.units = {'kJ/mol'} end; if rintable.properties.sm_entropy_abs ~= nil then rintable.properties.sm_entropy_abs.units = {'J/(K*mol)'} end; if rintable.properties.sm_heat_capacity_p ~= nil then rintable.properties.sm_heat_capacity_p.units = {'J/(K*mol)'} end;

formula = rintable.properties.formula
symbol = rintable.properties.symbol

if string.find(symbol, '%(aq%)') or string.find(symbol, '%(l%)') then
formula = string.gsub(formula, '%(aq%)',  '@' );
formula = string.gsub(formula, '%(l%)',  '@' ); 
end;

if string.find(symbol, '%(g%)') then
rintable.properties.aggregate_state['4'] = nil
rintable.properties.class_['2'] = nil
rintable.properties.aggregate_state['0'] = 'AS_GAS'
rintable.properties.class_['1'] = 'SC_GASFLUID'
formula = string.gsub(formula, '%(g%)',  '' );
end;

if string.find(symbol, '%(cr%)' ) 
or string.find(symbol, '%(am%)' ) 
or string.find(symbol, '%(s%)' ) 
or string.find(symbol, '%(mcr%)' ) 
or string.find(symbol, '%(lin%)' ) 
or string.find(symbol, '%(cycl%)' ) 
or string.find(symbol, '%(subst%)' )
or string.find(symbol, '%(rhomb%)' )  
or string.find(symbol, '%(dis%)' ) then
rintable.properties.aggregate_state['4'] = nil
rintable.properties.class_['2'] = nil
rintable.properties.aggregate_state['3'] = 'AS_CRYSTAL'
rintable.properties.class_['0'] = 'SC_COMPONENT'
formula = string.gsub(formula, '%(cr%)',  '' );
formula = string.gsub(formula, '%(am%)',  '' );
formula = string.gsub(formula, '%(s%)',  '' );
formula = string.gsub(formula, '%(mcr%)',  '' );
formula = string.gsub(formula, '%(lin%)',  '' );
formula = string.gsub(formula, '%(cycl%)',  '' );
formula = string.gsub(formula, '%(subst%)',  '' );
formula = string.gsub(formula, '%(dis%)',  '' );
formula = string.gsub(formula, '%(rhomb%)', '' );  
end;
rintable.properties.formula = formula

if rintable.properties.aggregate_state['0'] == 'AS_GAS' then rintable.properties.class_['2'] = nil rintable.properties.class_['1'] = 'SC_GASFLUID' end;
if rintable.properties.aggregate_state['3'] == 'AS_CRYSTAL' then rintable.properties.class_['2'] = nil rintable.properties.class_['0'] = 'SC_COMPONENT' end;"
     },
     "format": {
          "Nhcols": 10,
          "Nhrows": 1,
          "headers": [
               "substance",
               "formula",
               "state",
               "dHf_298",
               "dHf_298_error",
               "S_298",
               "S_298_error",
               "H_298-H_0",
               "H_298-H_0_error",
               "ref"
          ],
          "rowend": "\n",
          "rows_one_block": 1,
          "colends": ",",
          "usequotes": false,
          "usemore": false,
          "comment_regexp": ""
     },
     "renderer": "",
     "label": "VertexSubstance",
     "separators": {
          "v_sep": ",",
          "l_sep": "",
          "r_sep": "",
          "c_head": "",
          "c_end": "",
          "eod": "",
          "encoding": "",
          "str_delim": "",
          "bod": ""
     },
     "comment": "",
     "fname": "",
     "Nblocks": 0,
     "Nlines": 0
}
